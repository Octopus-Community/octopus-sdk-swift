//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: com/octopuscommunity/OctoObjectServiceProto.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Com_Octopuscommunity_OctoObjectServiceClient`, then call methods of this protocol to make API calls.
public protocol Com_Octopuscommunity_OctoObjectServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Com_Octopuscommunity_OctoObjectServiceClientInterceptorFactoryProtocol? { get }

  func get(
    _ request: Com_Octopuscommunity_GetRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_GetRequest, Com_Octopuscommunity_GetResponse>

  func getBatch(
    _ request: Com_Octopuscommunity_GetBatchRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_GetBatchRequest, Com_Octopuscommunity_GetBatchResponse>

  func putComment(
    _ request: Com_Octopuscommunity_PutRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutCommentResponse>

  func deleteComment(
    _ request: Com_Octopuscommunity_DeleteCommentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_DeleteCommentRequest, Com_Octopuscommunity_DeleteCommentResponse>

  func moderateComment(
    _ request: Com_Octopuscommunity_ModerateCommentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_ModerateCommentRequest, Com_Octopuscommunity_ModerateCommentResponse>

  func putPost(
    _ request: Com_Octopuscommunity_PutRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutPostResponse>

  func putLike(
    _ request: Com_Octopuscommunity_PutRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutLikeResponse>

  func deleteLike(
    _ request: Com_Octopuscommunity_DeleteLikeRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_DeleteLikeRequest, Com_Octopuscommunity_DeleteLikeResponse>

  func getTopics(
    _ request: Com_Octopuscommunity_GetTopicsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_GetTopicsRequest, Com_Octopuscommunity_GetTopicsResponse>

  func updatePost(
    _ request: Com_Octopuscommunity_UpdatePostRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_UpdatePostRequest, Com_Octopuscommunity_UpdatePostResponse>

  func deletePost(
    _ request: Com_Octopuscommunity_DeletePostRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_DeletePostRequest, Com_Octopuscommunity_DeletePostResponse>

  func moderatePost(
    _ request: Com_Octopuscommunity_ModeratePostRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_ModeratePostRequest, Com_Octopuscommunity_ModeratePostResponse>

  func reportContent(
    _ request: Com_Octopuscommunity_ReportContentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_ReportContentRequest, Com_Octopuscommunity_ReportContentResponse>
}

extension Com_Octopuscommunity_OctoObjectServiceClientProtocol {
  public var serviceName: String {
    return "com.octopuscommunity.OctoObjectService"
  }

  ///throw not found status when octoObject does not exist or has been deleted
  ///
  /// - Parameters:
  ///   - request: Request to send to Get.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func get(
    _ request: Com_Octopuscommunity_GetRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_GetRequest, Com_Octopuscommunity_GetResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.get.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInterceptors() ?? []
    )
  }

  /// Unary call to GetBatch
  ///
  /// - Parameters:
  ///   - request: Request to send to GetBatch.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getBatch(
    _ request: Com_Octopuscommunity_GetBatchRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_GetBatchRequest, Com_Octopuscommunity_GetBatchResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.getBatch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBatchInterceptors() ?? []
    )
  }

  ///TODO create a PutCommentRequest
  ///
  /// - Parameters:
  ///   - request: Request to send to PutComment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func putComment(
    _ request: Com_Octopuscommunity_PutRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutCommentResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.putComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePutCommentInterceptors() ?? []
    )
  }

  /// Unary call to DeleteComment
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteComment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteComment(
    _ request: Com_Octopuscommunity_DeleteCommentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_DeleteCommentRequest, Com_Octopuscommunity_DeleteCommentResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.deleteComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteCommentInterceptors() ?? []
    )
  }

  /// Unary call to ModerateComment
  ///
  /// - Parameters:
  ///   - request: Request to send to ModerateComment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func moderateComment(
    _ request: Com_Octopuscommunity_ModerateCommentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_ModerateCommentRequest, Com_Octopuscommunity_ModerateCommentResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.moderateComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeModerateCommentInterceptors() ?? []
    )
  }

  ///TODO create a PutPostRequest
  ///
  /// - Parameters:
  ///   - request: Request to send to PutPost.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func putPost(
    _ request: Com_Octopuscommunity_PutRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutPostResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.putPost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePutPostInterceptors() ?? []
    )
  }

  /// Unary call to PutLike
  ///
  /// - Parameters:
  ///   - request: Request to send to PutLike.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func putLike(
    _ request: Com_Octopuscommunity_PutRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutLikeResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.putLike.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePutLikeInterceptors() ?? []
    )
  }

  /// Unary call to DeleteLike
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteLike.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteLike(
    _ request: Com_Octopuscommunity_DeleteLikeRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_DeleteLikeRequest, Com_Octopuscommunity_DeleteLikeResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.deleteLike.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteLikeInterceptors() ?? []
    )
  }

  /// Unary call to GetTopics
  ///
  /// - Parameters:
  ///   - request: Request to send to GetTopics.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getTopics(
    _ request: Com_Octopuscommunity_GetTopicsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_GetTopicsRequest, Com_Octopuscommunity_GetTopicsResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.getTopics.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTopicsInterceptors() ?? []
    )
  }

  /// Unary call to UpdatePost
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdatePost.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updatePost(
    _ request: Com_Octopuscommunity_UpdatePostRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_UpdatePostRequest, Com_Octopuscommunity_UpdatePostResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.updatePost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePostInterceptors() ?? []
    )
  }

  /// Unary call to DeletePost
  ///
  /// - Parameters:
  ///   - request: Request to send to DeletePost.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deletePost(
    _ request: Com_Octopuscommunity_DeletePostRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_DeletePostRequest, Com_Octopuscommunity_DeletePostResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.deletePost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeletePostInterceptors() ?? []
    )
  }

  /// Unary call to ModeratePost
  ///
  /// - Parameters:
  ///   - request: Request to send to ModeratePost.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func moderatePost(
    _ request: Com_Octopuscommunity_ModeratePostRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_ModeratePostRequest, Com_Octopuscommunity_ModeratePostResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.moderatePost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeModeratePostInterceptors() ?? []
    )
  }

  ///Do nothing if moderation mod is off
  ///
  /// - Parameters:
  ///   - request: Request to send to ReportContent.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func reportContent(
    _ request: Com_Octopuscommunity_ReportContentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_ReportContentRequest, Com_Octopuscommunity_ReportContentResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.reportContent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReportContentInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Com_Octopuscommunity_OctoObjectServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Com_Octopuscommunity_OctoObjectServiceNIOClient")
public final class Com_Octopuscommunity_OctoObjectServiceClient: Com_Octopuscommunity_OctoObjectServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Com_Octopuscommunity_OctoObjectServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Com_Octopuscommunity_OctoObjectServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the com.octopuscommunity.OctoObjectService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Com_Octopuscommunity_OctoObjectServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Com_Octopuscommunity_OctoObjectServiceNIOClient: Com_Octopuscommunity_OctoObjectServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Com_Octopuscommunity_OctoObjectServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the com.octopuscommunity.OctoObjectService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Com_Octopuscommunity_OctoObjectServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Com_Octopuscommunity_OctoObjectServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Com_Octopuscommunity_OctoObjectServiceClientInterceptorFactoryProtocol? { get }

  func makeGetCall(
    _ request: Com_Octopuscommunity_GetRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetRequest, Com_Octopuscommunity_GetResponse>

  func makeGetBatchCall(
    _ request: Com_Octopuscommunity_GetBatchRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetBatchRequest, Com_Octopuscommunity_GetBatchResponse>

  func makePutCommentCall(
    _ request: Com_Octopuscommunity_PutRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutCommentResponse>

  func makeDeleteCommentCall(
    _ request: Com_Octopuscommunity_DeleteCommentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_DeleteCommentRequest, Com_Octopuscommunity_DeleteCommentResponse>

  func makeModerateCommentCall(
    _ request: Com_Octopuscommunity_ModerateCommentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ModerateCommentRequest, Com_Octopuscommunity_ModerateCommentResponse>

  func makePutPostCall(
    _ request: Com_Octopuscommunity_PutRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutPostResponse>

  func makePutLikeCall(
    _ request: Com_Octopuscommunity_PutRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutLikeResponse>

  func makeDeleteLikeCall(
    _ request: Com_Octopuscommunity_DeleteLikeRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_DeleteLikeRequest, Com_Octopuscommunity_DeleteLikeResponse>

  func makeGetTopicsCall(
    _ request: Com_Octopuscommunity_GetTopicsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetTopicsRequest, Com_Octopuscommunity_GetTopicsResponse>

  func makeUpdatePostCall(
    _ request: Com_Octopuscommunity_UpdatePostRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_UpdatePostRequest, Com_Octopuscommunity_UpdatePostResponse>

  func makeDeletePostCall(
    _ request: Com_Octopuscommunity_DeletePostRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_DeletePostRequest, Com_Octopuscommunity_DeletePostResponse>

  func makeModeratePostCall(
    _ request: Com_Octopuscommunity_ModeratePostRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ModeratePostRequest, Com_Octopuscommunity_ModeratePostResponse>

  func makeReportContentCall(
    _ request: Com_Octopuscommunity_ReportContentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ReportContentRequest, Com_Octopuscommunity_ReportContentResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Com_Octopuscommunity_OctoObjectServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Com_Octopuscommunity_OctoObjectServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Com_Octopuscommunity_OctoObjectServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetCall(
    _ request: Com_Octopuscommunity_GetRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetRequest, Com_Octopuscommunity_GetResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.get.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInterceptors() ?? []
    )
  }

  public func makeGetBatchCall(
    _ request: Com_Octopuscommunity_GetBatchRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetBatchRequest, Com_Octopuscommunity_GetBatchResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.getBatch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBatchInterceptors() ?? []
    )
  }

  public func makePutCommentCall(
    _ request: Com_Octopuscommunity_PutRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutCommentResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.putComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePutCommentInterceptors() ?? []
    )
  }

  public func makeDeleteCommentCall(
    _ request: Com_Octopuscommunity_DeleteCommentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_DeleteCommentRequest, Com_Octopuscommunity_DeleteCommentResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.deleteComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteCommentInterceptors() ?? []
    )
  }

  public func makeModerateCommentCall(
    _ request: Com_Octopuscommunity_ModerateCommentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ModerateCommentRequest, Com_Octopuscommunity_ModerateCommentResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.moderateComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeModerateCommentInterceptors() ?? []
    )
  }

  public func makePutPostCall(
    _ request: Com_Octopuscommunity_PutRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutPostResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.putPost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePutPostInterceptors() ?? []
    )
  }

  public func makePutLikeCall(
    _ request: Com_Octopuscommunity_PutRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutLikeResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.putLike.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePutLikeInterceptors() ?? []
    )
  }

  public func makeDeleteLikeCall(
    _ request: Com_Octopuscommunity_DeleteLikeRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_DeleteLikeRequest, Com_Octopuscommunity_DeleteLikeResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.deleteLike.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteLikeInterceptors() ?? []
    )
  }

  public func makeGetTopicsCall(
    _ request: Com_Octopuscommunity_GetTopicsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetTopicsRequest, Com_Octopuscommunity_GetTopicsResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.getTopics.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTopicsInterceptors() ?? []
    )
  }

  public func makeUpdatePostCall(
    _ request: Com_Octopuscommunity_UpdatePostRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_UpdatePostRequest, Com_Octopuscommunity_UpdatePostResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.updatePost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePostInterceptors() ?? []
    )
  }

  public func makeDeletePostCall(
    _ request: Com_Octopuscommunity_DeletePostRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_DeletePostRequest, Com_Octopuscommunity_DeletePostResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.deletePost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeletePostInterceptors() ?? []
    )
  }

  public func makeModeratePostCall(
    _ request: Com_Octopuscommunity_ModeratePostRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ModeratePostRequest, Com_Octopuscommunity_ModeratePostResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.moderatePost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeModeratePostInterceptors() ?? []
    )
  }

  public func makeReportContentCall(
    _ request: Com_Octopuscommunity_ReportContentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ReportContentRequest, Com_Octopuscommunity_ReportContentResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.reportContent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReportContentInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Com_Octopuscommunity_OctoObjectServiceAsyncClientProtocol {
  public func get(
    _ request: Com_Octopuscommunity_GetRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_GetResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.get.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetInterceptors() ?? []
    )
  }

  public func getBatch(
    _ request: Com_Octopuscommunity_GetBatchRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_GetBatchResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.getBatch.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetBatchInterceptors() ?? []
    )
  }

  public func putComment(
    _ request: Com_Octopuscommunity_PutRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_PutCommentResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.putComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePutCommentInterceptors() ?? []
    )
  }

  public func deleteComment(
    _ request: Com_Octopuscommunity_DeleteCommentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_DeleteCommentResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.deleteComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteCommentInterceptors() ?? []
    )
  }

  public func moderateComment(
    _ request: Com_Octopuscommunity_ModerateCommentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_ModerateCommentResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.moderateComment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeModerateCommentInterceptors() ?? []
    )
  }

  public func putPost(
    _ request: Com_Octopuscommunity_PutRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_PutPostResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.putPost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePutPostInterceptors() ?? []
    )
  }

  public func putLike(
    _ request: Com_Octopuscommunity_PutRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_PutLikeResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.putLike.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePutLikeInterceptors() ?? []
    )
  }

  public func deleteLike(
    _ request: Com_Octopuscommunity_DeleteLikeRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_DeleteLikeResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.deleteLike.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteLikeInterceptors() ?? []
    )
  }

  public func getTopics(
    _ request: Com_Octopuscommunity_GetTopicsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_GetTopicsResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.getTopics.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetTopicsInterceptors() ?? []
    )
  }

  public func updatePost(
    _ request: Com_Octopuscommunity_UpdatePostRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_UpdatePostResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.updatePost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePostInterceptors() ?? []
    )
  }

  public func deletePost(
    _ request: Com_Octopuscommunity_DeletePostRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_DeletePostResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.deletePost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeletePostInterceptors() ?? []
    )
  }

  public func moderatePost(
    _ request: Com_Octopuscommunity_ModeratePostRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_ModeratePostResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.moderatePost.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeModeratePostInterceptors() ?? []
    )
  }

  public func reportContent(
    _ request: Com_Octopuscommunity_ReportContentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_ReportContentResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.reportContent.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReportContentInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Com_Octopuscommunity_OctoObjectServiceAsyncClient: Com_Octopuscommunity_OctoObjectServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Com_Octopuscommunity_OctoObjectServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Com_Octopuscommunity_OctoObjectServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Com_Octopuscommunity_OctoObjectServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'get'.
  func makeGetInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_GetRequest, Com_Octopuscommunity_GetResponse>]

  /// - Returns: Interceptors to use when invoking 'getBatch'.
  func makeGetBatchInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_GetBatchRequest, Com_Octopuscommunity_GetBatchResponse>]

  /// - Returns: Interceptors to use when invoking 'putComment'.
  func makePutCommentInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutCommentResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteComment'.
  func makeDeleteCommentInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_DeleteCommentRequest, Com_Octopuscommunity_DeleteCommentResponse>]

  /// - Returns: Interceptors to use when invoking 'moderateComment'.
  func makeModerateCommentInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_ModerateCommentRequest, Com_Octopuscommunity_ModerateCommentResponse>]

  /// - Returns: Interceptors to use when invoking 'putPost'.
  func makePutPostInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutPostResponse>]

  /// - Returns: Interceptors to use when invoking 'putLike'.
  func makePutLikeInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutLikeResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteLike'.
  func makeDeleteLikeInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_DeleteLikeRequest, Com_Octopuscommunity_DeleteLikeResponse>]

  /// - Returns: Interceptors to use when invoking 'getTopics'.
  func makeGetTopicsInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_GetTopicsRequest, Com_Octopuscommunity_GetTopicsResponse>]

  /// - Returns: Interceptors to use when invoking 'updatePost'.
  func makeUpdatePostInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_UpdatePostRequest, Com_Octopuscommunity_UpdatePostResponse>]

  /// - Returns: Interceptors to use when invoking 'deletePost'.
  func makeDeletePostInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_DeletePostRequest, Com_Octopuscommunity_DeletePostResponse>]

  /// - Returns: Interceptors to use when invoking 'moderatePost'.
  func makeModeratePostInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_ModeratePostRequest, Com_Octopuscommunity_ModeratePostResponse>]

  /// - Returns: Interceptors to use when invoking 'reportContent'.
  func makeReportContentInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_ReportContentRequest, Com_Octopuscommunity_ReportContentResponse>]
}

public enum Com_Octopuscommunity_OctoObjectServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "OctoObjectService",
    fullName: "com.octopuscommunity.OctoObjectService",
    methods: [
      Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.get,
      Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.getBatch,
      Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.putComment,
      Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.deleteComment,
      Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.moderateComment,
      Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.putPost,
      Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.putLike,
      Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.deleteLike,
      Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.getTopics,
      Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.updatePost,
      Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.deletePost,
      Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.moderatePost,
      Com_Octopuscommunity_OctoObjectServiceClientMetadata.Methods.reportContent,
    ]
  )

  public enum Methods {
    public static let get = GRPCMethodDescriptor(
      name: "Get",
      path: "/com.octopuscommunity.OctoObjectService/Get",
      type: GRPCCallType.unary
    )

    public static let getBatch = GRPCMethodDescriptor(
      name: "GetBatch",
      path: "/com.octopuscommunity.OctoObjectService/GetBatch",
      type: GRPCCallType.unary
    )

    public static let putComment = GRPCMethodDescriptor(
      name: "PutComment",
      path: "/com.octopuscommunity.OctoObjectService/PutComment",
      type: GRPCCallType.unary
    )

    public static let deleteComment = GRPCMethodDescriptor(
      name: "DeleteComment",
      path: "/com.octopuscommunity.OctoObjectService/DeleteComment",
      type: GRPCCallType.unary
    )

    public static let moderateComment = GRPCMethodDescriptor(
      name: "ModerateComment",
      path: "/com.octopuscommunity.OctoObjectService/ModerateComment",
      type: GRPCCallType.unary
    )

    public static let putPost = GRPCMethodDescriptor(
      name: "PutPost",
      path: "/com.octopuscommunity.OctoObjectService/PutPost",
      type: GRPCCallType.unary
    )

    public static let putLike = GRPCMethodDescriptor(
      name: "PutLike",
      path: "/com.octopuscommunity.OctoObjectService/PutLike",
      type: GRPCCallType.unary
    )

    public static let deleteLike = GRPCMethodDescriptor(
      name: "DeleteLike",
      path: "/com.octopuscommunity.OctoObjectService/DeleteLike",
      type: GRPCCallType.unary
    )

    public static let getTopics = GRPCMethodDescriptor(
      name: "GetTopics",
      path: "/com.octopuscommunity.OctoObjectService/GetTopics",
      type: GRPCCallType.unary
    )

    public static let updatePost = GRPCMethodDescriptor(
      name: "UpdatePost",
      path: "/com.octopuscommunity.OctoObjectService/UpdatePost",
      type: GRPCCallType.unary
    )

    public static let deletePost = GRPCMethodDescriptor(
      name: "DeletePost",
      path: "/com.octopuscommunity.OctoObjectService/DeletePost",
      type: GRPCCallType.unary
    )

    public static let moderatePost = GRPCMethodDescriptor(
      name: "ModeratePost",
      path: "/com.octopuscommunity.OctoObjectService/ModeratePost",
      type: GRPCCallType.unary
    )

    public static let reportContent = GRPCMethodDescriptor(
      name: "ReportContent",
      path: "/com.octopuscommunity.OctoObjectService/ReportContent",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Com_Octopuscommunity_OctoObjectServiceProvider: CallHandlerProvider {
  var interceptors: Com_Octopuscommunity_OctoObjectServiceServerInterceptorFactoryProtocol? { get }

  ///throw not found status when octoObject does not exist or has been deleted
  func get(request: Com_Octopuscommunity_GetRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_GetResponse>

  func getBatch(request: Com_Octopuscommunity_GetBatchRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_GetBatchResponse>

  ///TODO create a PutCommentRequest
  func putComment(request: Com_Octopuscommunity_PutRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_PutCommentResponse>

  func deleteComment(request: Com_Octopuscommunity_DeleteCommentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_DeleteCommentResponse>

  func moderateComment(request: Com_Octopuscommunity_ModerateCommentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_ModerateCommentResponse>

  ///TODO create a PutPostRequest
  func putPost(request: Com_Octopuscommunity_PutRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_PutPostResponse>

  func putLike(request: Com_Octopuscommunity_PutRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_PutLikeResponse>

  func deleteLike(request: Com_Octopuscommunity_DeleteLikeRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_DeleteLikeResponse>

  func getTopics(request: Com_Octopuscommunity_GetTopicsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_GetTopicsResponse>

  func updatePost(request: Com_Octopuscommunity_UpdatePostRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_UpdatePostResponse>

  func deletePost(request: Com_Octopuscommunity_DeletePostRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_DeletePostResponse>

  func moderatePost(request: Com_Octopuscommunity_ModeratePostRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_ModeratePostResponse>

  ///Do nothing if moderation mod is off
  func reportContent(request: Com_Octopuscommunity_ReportContentRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_ReportContentResponse>
}

extension Com_Octopuscommunity_OctoObjectServiceProvider {
  public var serviceName: Substring {
    return Com_Octopuscommunity_OctoObjectServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Get":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetResponse>(),
        interceptors: self.interceptors?.makeGetInterceptors() ?? [],
        userFunction: self.get(request:context:)
      )

    case "GetBatch":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetBatchRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetBatchResponse>(),
        interceptors: self.interceptors?.makeGetBatchInterceptors() ?? [],
        userFunction: self.getBatch(request:context:)
      )

    case "PutComment":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_PutRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_PutCommentResponse>(),
        interceptors: self.interceptors?.makePutCommentInterceptors() ?? [],
        userFunction: self.putComment(request:context:)
      )

    case "DeleteComment":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_DeleteCommentRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_DeleteCommentResponse>(),
        interceptors: self.interceptors?.makeDeleteCommentInterceptors() ?? [],
        userFunction: self.deleteComment(request:context:)
      )

    case "ModerateComment":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ModerateCommentRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_ModerateCommentResponse>(),
        interceptors: self.interceptors?.makeModerateCommentInterceptors() ?? [],
        userFunction: self.moderateComment(request:context:)
      )

    case "PutPost":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_PutRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_PutPostResponse>(),
        interceptors: self.interceptors?.makePutPostInterceptors() ?? [],
        userFunction: self.putPost(request:context:)
      )

    case "PutLike":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_PutRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_PutLikeResponse>(),
        interceptors: self.interceptors?.makePutLikeInterceptors() ?? [],
        userFunction: self.putLike(request:context:)
      )

    case "DeleteLike":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_DeleteLikeRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_DeleteLikeResponse>(),
        interceptors: self.interceptors?.makeDeleteLikeInterceptors() ?? [],
        userFunction: self.deleteLike(request:context:)
      )

    case "GetTopics":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetTopicsRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetTopicsResponse>(),
        interceptors: self.interceptors?.makeGetTopicsInterceptors() ?? [],
        userFunction: self.getTopics(request:context:)
      )

    case "UpdatePost":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_UpdatePostRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_UpdatePostResponse>(),
        interceptors: self.interceptors?.makeUpdatePostInterceptors() ?? [],
        userFunction: self.updatePost(request:context:)
      )

    case "DeletePost":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_DeletePostRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_DeletePostResponse>(),
        interceptors: self.interceptors?.makeDeletePostInterceptors() ?? [],
        userFunction: self.deletePost(request:context:)
      )

    case "ModeratePost":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ModeratePostRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_ModeratePostResponse>(),
        interceptors: self.interceptors?.makeModeratePostInterceptors() ?? [],
        userFunction: self.moderatePost(request:context:)
      )

    case "ReportContent":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ReportContentRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_ReportContentResponse>(),
        interceptors: self.interceptors?.makeReportContentInterceptors() ?? [],
        userFunction: self.reportContent(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Com_Octopuscommunity_OctoObjectServiceAsyncProvider: CallHandlerProvider, Sendable {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Com_Octopuscommunity_OctoObjectServiceServerInterceptorFactoryProtocol? { get }

  ///throw not found status when octoObject does not exist or has been deleted
  func get(
    request: Com_Octopuscommunity_GetRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_GetResponse

  func getBatch(
    request: Com_Octopuscommunity_GetBatchRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_GetBatchResponse

  ///TODO create a PutCommentRequest
  func putComment(
    request: Com_Octopuscommunity_PutRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_PutCommentResponse

  func deleteComment(
    request: Com_Octopuscommunity_DeleteCommentRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_DeleteCommentResponse

  func moderateComment(
    request: Com_Octopuscommunity_ModerateCommentRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_ModerateCommentResponse

  ///TODO create a PutPostRequest
  func putPost(
    request: Com_Octopuscommunity_PutRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_PutPostResponse

  func putLike(
    request: Com_Octopuscommunity_PutRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_PutLikeResponse

  func deleteLike(
    request: Com_Octopuscommunity_DeleteLikeRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_DeleteLikeResponse

  func getTopics(
    request: Com_Octopuscommunity_GetTopicsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_GetTopicsResponse

  func updatePost(
    request: Com_Octopuscommunity_UpdatePostRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_UpdatePostResponse

  func deletePost(
    request: Com_Octopuscommunity_DeletePostRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_DeletePostResponse

  func moderatePost(
    request: Com_Octopuscommunity_ModeratePostRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_ModeratePostResponse

  ///Do nothing if moderation mod is off
  func reportContent(
    request: Com_Octopuscommunity_ReportContentRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_ReportContentResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Com_Octopuscommunity_OctoObjectServiceAsyncProvider {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Com_Octopuscommunity_OctoObjectServiceServerMetadata.serviceDescriptor
  }

  public var serviceName: Substring {
    return Com_Octopuscommunity_OctoObjectServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  public var interceptors: Com_Octopuscommunity_OctoObjectServiceServerInterceptorFactoryProtocol? {
    return nil
  }

  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "Get":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetResponse>(),
        interceptors: self.interceptors?.makeGetInterceptors() ?? [],
        wrapping: { try await self.get(request: $0, context: $1) }
      )

    case "GetBatch":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetBatchRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetBatchResponse>(),
        interceptors: self.interceptors?.makeGetBatchInterceptors() ?? [],
        wrapping: { try await self.getBatch(request: $0, context: $1) }
      )

    case "PutComment":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_PutRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_PutCommentResponse>(),
        interceptors: self.interceptors?.makePutCommentInterceptors() ?? [],
        wrapping: { try await self.putComment(request: $0, context: $1) }
      )

    case "DeleteComment":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_DeleteCommentRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_DeleteCommentResponse>(),
        interceptors: self.interceptors?.makeDeleteCommentInterceptors() ?? [],
        wrapping: { try await self.deleteComment(request: $0, context: $1) }
      )

    case "ModerateComment":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ModerateCommentRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_ModerateCommentResponse>(),
        interceptors: self.interceptors?.makeModerateCommentInterceptors() ?? [],
        wrapping: { try await self.moderateComment(request: $0, context: $1) }
      )

    case "PutPost":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_PutRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_PutPostResponse>(),
        interceptors: self.interceptors?.makePutPostInterceptors() ?? [],
        wrapping: { try await self.putPost(request: $0, context: $1) }
      )

    case "PutLike":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_PutRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_PutLikeResponse>(),
        interceptors: self.interceptors?.makePutLikeInterceptors() ?? [],
        wrapping: { try await self.putLike(request: $0, context: $1) }
      )

    case "DeleteLike":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_DeleteLikeRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_DeleteLikeResponse>(),
        interceptors: self.interceptors?.makeDeleteLikeInterceptors() ?? [],
        wrapping: { try await self.deleteLike(request: $0, context: $1) }
      )

    case "GetTopics":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetTopicsRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetTopicsResponse>(),
        interceptors: self.interceptors?.makeGetTopicsInterceptors() ?? [],
        wrapping: { try await self.getTopics(request: $0, context: $1) }
      )

    case "UpdatePost":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_UpdatePostRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_UpdatePostResponse>(),
        interceptors: self.interceptors?.makeUpdatePostInterceptors() ?? [],
        wrapping: { try await self.updatePost(request: $0, context: $1) }
      )

    case "DeletePost":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_DeletePostRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_DeletePostResponse>(),
        interceptors: self.interceptors?.makeDeletePostInterceptors() ?? [],
        wrapping: { try await self.deletePost(request: $0, context: $1) }
      )

    case "ModeratePost":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ModeratePostRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_ModeratePostResponse>(),
        interceptors: self.interceptors?.makeModeratePostInterceptors() ?? [],
        wrapping: { try await self.moderatePost(request: $0, context: $1) }
      )

    case "ReportContent":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ReportContentRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_ReportContentResponse>(),
        interceptors: self.interceptors?.makeReportContentInterceptors() ?? [],
        wrapping: { try await self.reportContent(request: $0, context: $1) }
      )

    default:
      return nil
    }
  }
}

public protocol Com_Octopuscommunity_OctoObjectServiceServerInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when handling 'get'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_GetRequest, Com_Octopuscommunity_GetResponse>]

  /// - Returns: Interceptors to use when handling 'getBatch'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetBatchInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_GetBatchRequest, Com_Octopuscommunity_GetBatchResponse>]

  /// - Returns: Interceptors to use when handling 'putComment'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makePutCommentInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutCommentResponse>]

  /// - Returns: Interceptors to use when handling 'deleteComment'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteCommentInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_DeleteCommentRequest, Com_Octopuscommunity_DeleteCommentResponse>]

  /// - Returns: Interceptors to use when handling 'moderateComment'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeModerateCommentInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_ModerateCommentRequest, Com_Octopuscommunity_ModerateCommentResponse>]

  /// - Returns: Interceptors to use when handling 'putPost'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makePutPostInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutPostResponse>]

  /// - Returns: Interceptors to use when handling 'putLike'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makePutLikeInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_PutRequest, Com_Octopuscommunity_PutLikeResponse>]

  /// - Returns: Interceptors to use when handling 'deleteLike'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteLikeInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_DeleteLikeRequest, Com_Octopuscommunity_DeleteLikeResponse>]

  /// - Returns: Interceptors to use when handling 'getTopics'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetTopicsInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_GetTopicsRequest, Com_Octopuscommunity_GetTopicsResponse>]

  /// - Returns: Interceptors to use when handling 'updatePost'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdatePostInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_UpdatePostRequest, Com_Octopuscommunity_UpdatePostResponse>]

  /// - Returns: Interceptors to use when handling 'deletePost'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeletePostInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_DeletePostRequest, Com_Octopuscommunity_DeletePostResponse>]

  /// - Returns: Interceptors to use when handling 'moderatePost'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeModeratePostInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_ModeratePostRequest, Com_Octopuscommunity_ModeratePostResponse>]

  /// - Returns: Interceptors to use when handling 'reportContent'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeReportContentInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_ReportContentRequest, Com_Octopuscommunity_ReportContentResponse>]
}

public enum Com_Octopuscommunity_OctoObjectServiceServerMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "OctoObjectService",
    fullName: "com.octopuscommunity.OctoObjectService",
    methods: [
      Com_Octopuscommunity_OctoObjectServiceServerMetadata.Methods.get,
      Com_Octopuscommunity_OctoObjectServiceServerMetadata.Methods.getBatch,
      Com_Octopuscommunity_OctoObjectServiceServerMetadata.Methods.putComment,
      Com_Octopuscommunity_OctoObjectServiceServerMetadata.Methods.deleteComment,
      Com_Octopuscommunity_OctoObjectServiceServerMetadata.Methods.moderateComment,
      Com_Octopuscommunity_OctoObjectServiceServerMetadata.Methods.putPost,
      Com_Octopuscommunity_OctoObjectServiceServerMetadata.Methods.putLike,
      Com_Octopuscommunity_OctoObjectServiceServerMetadata.Methods.deleteLike,
      Com_Octopuscommunity_OctoObjectServiceServerMetadata.Methods.getTopics,
      Com_Octopuscommunity_OctoObjectServiceServerMetadata.Methods.updatePost,
      Com_Octopuscommunity_OctoObjectServiceServerMetadata.Methods.deletePost,
      Com_Octopuscommunity_OctoObjectServiceServerMetadata.Methods.moderatePost,
      Com_Octopuscommunity_OctoObjectServiceServerMetadata.Methods.reportContent,
    ]
  )

  public enum Methods {
    public static let get = GRPCMethodDescriptor(
      name: "Get",
      path: "/com.octopuscommunity.OctoObjectService/Get",
      type: GRPCCallType.unary
    )

    public static let getBatch = GRPCMethodDescriptor(
      name: "GetBatch",
      path: "/com.octopuscommunity.OctoObjectService/GetBatch",
      type: GRPCCallType.unary
    )

    public static let putComment = GRPCMethodDescriptor(
      name: "PutComment",
      path: "/com.octopuscommunity.OctoObjectService/PutComment",
      type: GRPCCallType.unary
    )

    public static let deleteComment = GRPCMethodDescriptor(
      name: "DeleteComment",
      path: "/com.octopuscommunity.OctoObjectService/DeleteComment",
      type: GRPCCallType.unary
    )

    public static let moderateComment = GRPCMethodDescriptor(
      name: "ModerateComment",
      path: "/com.octopuscommunity.OctoObjectService/ModerateComment",
      type: GRPCCallType.unary
    )

    public static let putPost = GRPCMethodDescriptor(
      name: "PutPost",
      path: "/com.octopuscommunity.OctoObjectService/PutPost",
      type: GRPCCallType.unary
    )

    public static let putLike = GRPCMethodDescriptor(
      name: "PutLike",
      path: "/com.octopuscommunity.OctoObjectService/PutLike",
      type: GRPCCallType.unary
    )

    public static let deleteLike = GRPCMethodDescriptor(
      name: "DeleteLike",
      path: "/com.octopuscommunity.OctoObjectService/DeleteLike",
      type: GRPCCallType.unary
    )

    public static let getTopics = GRPCMethodDescriptor(
      name: "GetTopics",
      path: "/com.octopuscommunity.OctoObjectService/GetTopics",
      type: GRPCCallType.unary
    )

    public static let updatePost = GRPCMethodDescriptor(
      name: "UpdatePost",
      path: "/com.octopuscommunity.OctoObjectService/UpdatePost",
      type: GRPCCallType.unary
    )

    public static let deletePost = GRPCMethodDescriptor(
      name: "DeletePost",
      path: "/com.octopuscommunity.OctoObjectService/DeletePost",
      type: GRPCCallType.unary
    )

    public static let moderatePost = GRPCMethodDescriptor(
      name: "ModeratePost",
      path: "/com.octopuscommunity.OctoObjectService/ModeratePost",
      type: GRPCCallType.unary
    )

    public static let reportContent = GRPCMethodDescriptor(
      name: "ReportContent",
      path: "/com.octopuscommunity.OctoObjectService/ReportContent",
      type: GRPCCallType.unary
    )
  }
}
