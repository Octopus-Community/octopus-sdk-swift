//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: com/octopuscommunity/UserServiceProto.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Com_Octopuscommunity_UserServiceClient`, then call methods of this protocol to make API calls.
public protocol Com_Octopuscommunity_UserServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol? { get }

  func deleteUser(
    _ request: Com_Octopuscommunity_DeleteUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_DeleteUserRequest, Com_Octopuscommunity_DeleteUserResponse>

  func banUser(
    _ request: Com_Octopuscommunity_BanUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_BanUserRequest, Com_Octopuscommunity_BanUserResponse>

  func unbanUser(
    _ request: Com_Octopuscommunity_UnbanUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_UnbanUserRequest, Com_Octopuscommunity_UnbanUserResponse>

  func shadowBanUser(
    _ request: Com_Octopuscommunity_ShadowBanUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_ShadowBanUserRequest, Com_Octopuscommunity_ShadowBanUserResponse>

  func unShadowBanUser(
    _ request: Com_Octopuscommunity_ShadowUnbanUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_ShadowUnbanUserRequest, Com_Octopuscommunity_UnShadowBanUserResponse>

  func createUser(
    _ request: Com_Octopuscommunity_CreateUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_CreateUserRequest, Com_Octopuscommunity_CreateUserResponse>

  func createProfile(
    _ request: Com_Octopuscommunity_UpdateProfileRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse>

  func updateProfile(
    _ request: Com_Octopuscommunity_UpdateProfileRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse>

  func getPublicProfile(
    _ request: Com_Octopuscommunity_GetPublicProfileRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_GetPublicProfileRequest, Com_Octopuscommunity_GetPublicProfileResponse>

  func getPrivateProfile(
    _ request: Com_Octopuscommunity_GetPrivateProfileRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_GetPrivateProfileRequest, Com_Octopuscommunity_GetPrivateProfileResponse>

  func deleteMyProfile(
    _ request: Com_Octopuscommunity_DeleteMyProfileRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_DeleteMyProfileRequest, Com_Octopuscommunity_DeleteMyProfileResponse>

  func reportUser(
    _ request: Com_Octopuscommunity_ReportUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_ReportUserRequest, Com_Octopuscommunity_ReportUserResponse>

  func blockUser(
    _ request: Com_Octopuscommunity_BlockUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_BlockUserRequest, Com_Octopuscommunity_BlockUserResponse>

  func searchUser(
    _ request: Com_Octopuscommunity_SearchUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_SearchUserRequest, Com_Octopuscommunity_SearchUserResponse>

  func getJwtFromClientSignedToken(
    _ request: Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest, Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse>

  func getGuestJwt(
    _ request: Com_Octopuscommunity_GetGuestJwtRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_GetGuestJwtRequest, Com_Octopuscommunity_GetGuestJwtResponse>

  func canAccessCommunity(
    _ request: Com_Octopuscommunity_CanAccessCommunityRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_CanAccessCommunityRequest, Com_Octopuscommunity_CanAccessCommunityResponse>

  func byPassAbTesting(
    _ request: Com_Octopuscommunity_ByPassAbTestingRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_ByPassAbTestingRequest, Com_Octopuscommunity_ByPassAbTestingResponse>

  func setProfileTag(
    _ request: Com_Octopuscommunity_SetProfileTagRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_SetProfileTagRequest, Com_Octopuscommunity_SetProfileTagResponse>
}

extension Com_Octopuscommunity_UserServiceClientProtocol {
  public var serviceName: String {
    return "com.octopuscommunity.UserService"
  }

  /// Unary call to DeleteUser
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteUser(
    _ request: Com_Octopuscommunity_DeleteUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_DeleteUserRequest, Com_Octopuscommunity_DeleteUserResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserInterceptors() ?? []
    )
  }

  ///For BO user only
  ///
  /// - Parameters:
  ///   - request: Request to send to BanUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func banUser(
    _ request: Com_Octopuscommunity_BanUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_BanUserRequest, Com_Octopuscommunity_BanUserResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.banUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBanUserInterceptors() ?? []
    )
  }

  ///For Admin user only
  ///
  /// - Parameters:
  ///   - request: Request to send to UnbanUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func unbanUser(
    _ request: Com_Octopuscommunity_UnbanUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_UnbanUserRequest, Com_Octopuscommunity_UnbanUserResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.unbanUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbanUserInterceptors() ?? []
    )
  }

  ///For BO user only
  ///
  /// - Parameters:
  ///   - request: Request to send to ShadowBanUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func shadowBanUser(
    _ request: Com_Octopuscommunity_ShadowBanUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_ShadowBanUserRequest, Com_Octopuscommunity_ShadowBanUserResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.shadowBanUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeShadowBanUserInterceptors() ?? []
    )
  }

  ///For Admin user only
  ///
  /// - Parameters:
  ///   - request: Request to send to UnShadowBanUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func unShadowBanUser(
    _ request: Com_Octopuscommunity_ShadowUnbanUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_ShadowUnbanUserRequest, Com_Octopuscommunity_UnShadowBanUserResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.unShadowBanUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnShadowBanUserInterceptors() ?? []
    )
  }

  /// Unary call to createUser
  ///
  /// - Parameters:
  ///   - request: Request to send to createUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createUser(
    _ request: Com_Octopuscommunity_CreateUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_CreateUserRequest, Com_Octopuscommunity_CreateUserResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.createUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makecreateUserInterceptors() ?? []
    )
  }

  ///Same as UpdateProfile, just help to understand the use case for tracking signup
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateProfile.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createProfile(
    _ request: Com_Octopuscommunity_UpdateProfileRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.createProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateProfileInterceptors() ?? []
    )
  }

  /// Unary call to UpdateProfile
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateProfile.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateProfile(
    _ request: Com_Octopuscommunity_UpdateProfileRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.updateProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateProfileInterceptors() ?? []
    )
  }

  /// Unary call to GetPublicProfile
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPublicProfile.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getPublicProfile(
    _ request: Com_Octopuscommunity_GetPublicProfileRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_GetPublicProfileRequest, Com_Octopuscommunity_GetPublicProfileResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPublicProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPublicProfileInterceptors() ?? []
    )
  }

  /// Unary call to GetPrivateProfile
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPrivateProfile.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getPrivateProfile(
    _ request: Com_Octopuscommunity_GetPrivateProfileRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_GetPrivateProfileRequest, Com_Octopuscommunity_GetPrivateProfileResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPrivateProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPrivateProfileInterceptors() ?? []
    )
  }

  /// Unary call to DeleteMyProfile
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteMyProfile.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteMyProfile(
    _ request: Com_Octopuscommunity_DeleteMyProfileRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_DeleteMyProfileRequest, Com_Octopuscommunity_DeleteMyProfileResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteMyProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteMyProfileInterceptors() ?? []
    )
  }

  /// Unary call to ReportUser
  ///
  /// - Parameters:
  ///   - request: Request to send to ReportUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func reportUser(
    _ request: Com_Octopuscommunity_ReportUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_ReportUserRequest, Com_Octopuscommunity_ReportUserResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.reportUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReportUserInterceptors() ?? []
    )
  }

  /// Unary call to BlockUser
  ///
  /// - Parameters:
  ///   - request: Request to send to BlockUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func blockUser(
    _ request: Com_Octopuscommunity_BlockUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_BlockUserRequest, Com_Octopuscommunity_BlockUserResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.blockUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBlockUserInterceptors() ?? []
    )
  }

  /// Unary call to SearchUser
  ///
  /// - Parameters:
  ///   - request: Request to send to SearchUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func searchUser(
    _ request: Com_Octopuscommunity_SearchUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_SearchUserRequest, Com_Octopuscommunity_SearchUserResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.searchUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSearchUserInterceptors() ?? []
    )
  }

  /// Unary call to GetJwtFromClientSignedToken
  ///
  /// - Parameters:
  ///   - request: Request to send to GetJwtFromClientSignedToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getJwtFromClientSignedToken(
    _ request: Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest, Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getJwtFromClientSignedToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetJwtFromClientSignedTokenInterceptors() ?? []
    )
  }

  /// Unary call to GetGuestJwt
  ///
  /// - Parameters:
  ///   - request: Request to send to GetGuestJwt.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getGuestJwt(
    _ request: Com_Octopuscommunity_GetGuestJwtRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_GetGuestJwtRequest, Com_Octopuscommunity_GetGuestJwtResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getGuestJwt.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetGuestJwtInterceptors() ?? []
    )
  }

  /// Unary call to CanAccessCommunity
  ///
  /// - Parameters:
  ///   - request: Request to send to CanAccessCommunity.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func canAccessCommunity(
    _ request: Com_Octopuscommunity_CanAccessCommunityRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_CanAccessCommunityRequest, Com_Octopuscommunity_CanAccessCommunityResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.canAccessCommunity.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCanAccessCommunityInterceptors() ?? []
    )
  }

  /// Unary call to ByPassAbTesting
  ///
  /// - Parameters:
  ///   - request: Request to send to ByPassAbTesting.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func byPassAbTesting(
    _ request: Com_Octopuscommunity_ByPassAbTestingRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_ByPassAbTestingRequest, Com_Octopuscommunity_ByPassAbTestingResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.byPassAbTesting.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeByPassAbTestingInterceptors() ?? []
    )
  }

  /// Unary call to SetProfileTag
  ///
  /// - Parameters:
  ///   - request: Request to send to SetProfileTag.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setProfileTag(
    _ request: Com_Octopuscommunity_SetProfileTagRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_SetProfileTagRequest, Com_Octopuscommunity_SetProfileTagResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.setProfileTag.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetProfileTagInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Com_Octopuscommunity_UserServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Com_Octopuscommunity_UserServiceNIOClient")
public final class Com_Octopuscommunity_UserServiceClient: Com_Octopuscommunity_UserServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the com.octopuscommunity.UserService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Com_Octopuscommunity_UserServiceNIOClient: Com_Octopuscommunity_UserServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the com.octopuscommunity.UserService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Com_Octopuscommunity_UserServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol? { get }

  func makeDeleteUserCall(
    _ request: Com_Octopuscommunity_DeleteUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_DeleteUserRequest, Com_Octopuscommunity_DeleteUserResponse>

  func makeBanUserCall(
    _ request: Com_Octopuscommunity_BanUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_BanUserRequest, Com_Octopuscommunity_BanUserResponse>

  func makeUnbanUserCall(
    _ request: Com_Octopuscommunity_UnbanUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_UnbanUserRequest, Com_Octopuscommunity_UnbanUserResponse>

  func makeShadowBanUserCall(
    _ request: Com_Octopuscommunity_ShadowBanUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ShadowBanUserRequest, Com_Octopuscommunity_ShadowBanUserResponse>

  func makeUnShadowBanUserCall(
    _ request: Com_Octopuscommunity_ShadowUnbanUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ShadowUnbanUserRequest, Com_Octopuscommunity_UnShadowBanUserResponse>

  func makeCreateUserCall(
    _ request: Com_Octopuscommunity_CreateUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_CreateUserRequest, Com_Octopuscommunity_CreateUserResponse>

  func makeCreateProfileCall(
    _ request: Com_Octopuscommunity_UpdateProfileRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse>

  func makeUpdateProfileCall(
    _ request: Com_Octopuscommunity_UpdateProfileRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse>

  func makeGetPublicProfileCall(
    _ request: Com_Octopuscommunity_GetPublicProfileRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetPublicProfileRequest, Com_Octopuscommunity_GetPublicProfileResponse>

  func makeGetPrivateProfileCall(
    _ request: Com_Octopuscommunity_GetPrivateProfileRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetPrivateProfileRequest, Com_Octopuscommunity_GetPrivateProfileResponse>

  func makeDeleteMyProfileCall(
    _ request: Com_Octopuscommunity_DeleteMyProfileRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_DeleteMyProfileRequest, Com_Octopuscommunity_DeleteMyProfileResponse>

  func makeReportUserCall(
    _ request: Com_Octopuscommunity_ReportUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ReportUserRequest, Com_Octopuscommunity_ReportUserResponse>

  func makeBlockUserCall(
    _ request: Com_Octopuscommunity_BlockUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_BlockUserRequest, Com_Octopuscommunity_BlockUserResponse>

  func makeSearchUserCall(
    _ request: Com_Octopuscommunity_SearchUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_SearchUserRequest, Com_Octopuscommunity_SearchUserResponse>

  func makeGetJwtFromClientSignedTokenCall(
    _ request: Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest, Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse>

  func makeGetGuestJwtCall(
    _ request: Com_Octopuscommunity_GetGuestJwtRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetGuestJwtRequest, Com_Octopuscommunity_GetGuestJwtResponse>

  func makeCanAccessCommunityCall(
    _ request: Com_Octopuscommunity_CanAccessCommunityRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_CanAccessCommunityRequest, Com_Octopuscommunity_CanAccessCommunityResponse>

  func makeByPassAbTestingCall(
    _ request: Com_Octopuscommunity_ByPassAbTestingRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ByPassAbTestingRequest, Com_Octopuscommunity_ByPassAbTestingResponse>

  func makeSetProfileTagCall(
    _ request: Com_Octopuscommunity_SetProfileTagRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_SetProfileTagRequest, Com_Octopuscommunity_SetProfileTagResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Com_Octopuscommunity_UserServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Com_Octopuscommunity_UserServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeDeleteUserCall(
    _ request: Com_Octopuscommunity_DeleteUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_DeleteUserRequest, Com_Octopuscommunity_DeleteUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserInterceptors() ?? []
    )
  }

  public func makeBanUserCall(
    _ request: Com_Octopuscommunity_BanUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_BanUserRequest, Com_Octopuscommunity_BanUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.banUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBanUserInterceptors() ?? []
    )
  }

  public func makeUnbanUserCall(
    _ request: Com_Octopuscommunity_UnbanUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_UnbanUserRequest, Com_Octopuscommunity_UnbanUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.unbanUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbanUserInterceptors() ?? []
    )
  }

  public func makeShadowBanUserCall(
    _ request: Com_Octopuscommunity_ShadowBanUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ShadowBanUserRequest, Com_Octopuscommunity_ShadowBanUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.shadowBanUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeShadowBanUserInterceptors() ?? []
    )
  }

  public func makeUnShadowBanUserCall(
    _ request: Com_Octopuscommunity_ShadowUnbanUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ShadowUnbanUserRequest, Com_Octopuscommunity_UnShadowBanUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.unShadowBanUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnShadowBanUserInterceptors() ?? []
    )
  }

  public func makeCreateUserCall(
    _ request: Com_Octopuscommunity_CreateUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_CreateUserRequest, Com_Octopuscommunity_CreateUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.createUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makecreateUserInterceptors() ?? []
    )
  }

  public func makeCreateProfileCall(
    _ request: Com_Octopuscommunity_UpdateProfileRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.createProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateProfileInterceptors() ?? []
    )
  }

  public func makeUpdateProfileCall(
    _ request: Com_Octopuscommunity_UpdateProfileRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.updateProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateProfileInterceptors() ?? []
    )
  }

  public func makeGetPublicProfileCall(
    _ request: Com_Octopuscommunity_GetPublicProfileRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetPublicProfileRequest, Com_Octopuscommunity_GetPublicProfileResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPublicProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPublicProfileInterceptors() ?? []
    )
  }

  public func makeGetPrivateProfileCall(
    _ request: Com_Octopuscommunity_GetPrivateProfileRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetPrivateProfileRequest, Com_Octopuscommunity_GetPrivateProfileResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPrivateProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPrivateProfileInterceptors() ?? []
    )
  }

  public func makeDeleteMyProfileCall(
    _ request: Com_Octopuscommunity_DeleteMyProfileRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_DeleteMyProfileRequest, Com_Octopuscommunity_DeleteMyProfileResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteMyProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteMyProfileInterceptors() ?? []
    )
  }

  public func makeReportUserCall(
    _ request: Com_Octopuscommunity_ReportUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ReportUserRequest, Com_Octopuscommunity_ReportUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.reportUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReportUserInterceptors() ?? []
    )
  }

  public func makeBlockUserCall(
    _ request: Com_Octopuscommunity_BlockUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_BlockUserRequest, Com_Octopuscommunity_BlockUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.blockUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBlockUserInterceptors() ?? []
    )
  }

  public func makeSearchUserCall(
    _ request: Com_Octopuscommunity_SearchUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_SearchUserRequest, Com_Octopuscommunity_SearchUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.searchUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSearchUserInterceptors() ?? []
    )
  }

  public func makeGetJwtFromClientSignedTokenCall(
    _ request: Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest, Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getJwtFromClientSignedToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetJwtFromClientSignedTokenInterceptors() ?? []
    )
  }

  public func makeGetGuestJwtCall(
    _ request: Com_Octopuscommunity_GetGuestJwtRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetGuestJwtRequest, Com_Octopuscommunity_GetGuestJwtResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getGuestJwt.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetGuestJwtInterceptors() ?? []
    )
  }

  public func makeCanAccessCommunityCall(
    _ request: Com_Octopuscommunity_CanAccessCommunityRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_CanAccessCommunityRequest, Com_Octopuscommunity_CanAccessCommunityResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.canAccessCommunity.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCanAccessCommunityInterceptors() ?? []
    )
  }

  public func makeByPassAbTestingCall(
    _ request: Com_Octopuscommunity_ByPassAbTestingRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ByPassAbTestingRequest, Com_Octopuscommunity_ByPassAbTestingResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.byPassAbTesting.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeByPassAbTestingInterceptors() ?? []
    )
  }

  public func makeSetProfileTagCall(
    _ request: Com_Octopuscommunity_SetProfileTagRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_SetProfileTagRequest, Com_Octopuscommunity_SetProfileTagResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.setProfileTag.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetProfileTagInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Com_Octopuscommunity_UserServiceAsyncClientProtocol {
  public func deleteUser(
    _ request: Com_Octopuscommunity_DeleteUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_DeleteUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserInterceptors() ?? []
    )
  }

  public func banUser(
    _ request: Com_Octopuscommunity_BanUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_BanUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.banUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBanUserInterceptors() ?? []
    )
  }

  public func unbanUser(
    _ request: Com_Octopuscommunity_UnbanUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_UnbanUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.unbanUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbanUserInterceptors() ?? []
    )
  }

  public func shadowBanUser(
    _ request: Com_Octopuscommunity_ShadowBanUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_ShadowBanUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.shadowBanUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeShadowBanUserInterceptors() ?? []
    )
  }

  public func unShadowBanUser(
    _ request: Com_Octopuscommunity_ShadowUnbanUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_UnShadowBanUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.unShadowBanUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnShadowBanUserInterceptors() ?? []
    )
  }

  public func createUser(
    _ request: Com_Octopuscommunity_CreateUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_CreateUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.createUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makecreateUserInterceptors() ?? []
    )
  }

  public func createProfile(
    _ request: Com_Octopuscommunity_UpdateProfileRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_UpdateProfileResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.createProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateProfileInterceptors() ?? []
    )
  }

  public func updateProfile(
    _ request: Com_Octopuscommunity_UpdateProfileRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_UpdateProfileResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.updateProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateProfileInterceptors() ?? []
    )
  }

  public func getPublicProfile(
    _ request: Com_Octopuscommunity_GetPublicProfileRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_GetPublicProfileResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPublicProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPublicProfileInterceptors() ?? []
    )
  }

  public func getPrivateProfile(
    _ request: Com_Octopuscommunity_GetPrivateProfileRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_GetPrivateProfileResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPrivateProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPrivateProfileInterceptors() ?? []
    )
  }

  public func deleteMyProfile(
    _ request: Com_Octopuscommunity_DeleteMyProfileRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_DeleteMyProfileResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteMyProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteMyProfileInterceptors() ?? []
    )
  }

  public func reportUser(
    _ request: Com_Octopuscommunity_ReportUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_ReportUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.reportUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReportUserInterceptors() ?? []
    )
  }

  public func blockUser(
    _ request: Com_Octopuscommunity_BlockUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_BlockUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.blockUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBlockUserInterceptors() ?? []
    )
  }

  public func searchUser(
    _ request: Com_Octopuscommunity_SearchUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_SearchUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.searchUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSearchUserInterceptors() ?? []
    )
  }

  public func getJwtFromClientSignedToken(
    _ request: Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getJwtFromClientSignedToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetJwtFromClientSignedTokenInterceptors() ?? []
    )
  }

  public func getGuestJwt(
    _ request: Com_Octopuscommunity_GetGuestJwtRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_GetGuestJwtResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getGuestJwt.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetGuestJwtInterceptors() ?? []
    )
  }

  public func canAccessCommunity(
    _ request: Com_Octopuscommunity_CanAccessCommunityRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_CanAccessCommunityResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.canAccessCommunity.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCanAccessCommunityInterceptors() ?? []
    )
  }

  public func byPassAbTesting(
    _ request: Com_Octopuscommunity_ByPassAbTestingRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_ByPassAbTestingResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.byPassAbTesting.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeByPassAbTestingInterceptors() ?? []
    )
  }

  public func setProfileTag(
    _ request: Com_Octopuscommunity_SetProfileTagRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_SetProfileTagResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.setProfileTag.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetProfileTagInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Com_Octopuscommunity_UserServiceAsyncClient: Com_Octopuscommunity_UserServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'deleteUser'.
  func makeDeleteUserInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_DeleteUserRequest, Com_Octopuscommunity_DeleteUserResponse>]

  /// - Returns: Interceptors to use when invoking 'banUser'.
  func makeBanUserInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_BanUserRequest, Com_Octopuscommunity_BanUserResponse>]

  /// - Returns: Interceptors to use when invoking 'unbanUser'.
  func makeUnbanUserInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_UnbanUserRequest, Com_Octopuscommunity_UnbanUserResponse>]

  /// - Returns: Interceptors to use when invoking 'shadowBanUser'.
  func makeShadowBanUserInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_ShadowBanUserRequest, Com_Octopuscommunity_ShadowBanUserResponse>]

  /// - Returns: Interceptors to use when invoking 'unShadowBanUser'.
  func makeUnShadowBanUserInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_ShadowUnbanUserRequest, Com_Octopuscommunity_UnShadowBanUserResponse>]

  /// - Returns: Interceptors to use when invoking 'createUser'.
  func makecreateUserInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_CreateUserRequest, Com_Octopuscommunity_CreateUserResponse>]

  /// - Returns: Interceptors to use when invoking 'createProfile'.
  func makeCreateProfileInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse>]

  /// - Returns: Interceptors to use when invoking 'updateProfile'.
  func makeUpdateProfileInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse>]

  /// - Returns: Interceptors to use when invoking 'getPublicProfile'.
  func makeGetPublicProfileInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_GetPublicProfileRequest, Com_Octopuscommunity_GetPublicProfileResponse>]

  /// - Returns: Interceptors to use when invoking 'getPrivateProfile'.
  func makeGetPrivateProfileInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_GetPrivateProfileRequest, Com_Octopuscommunity_GetPrivateProfileResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteMyProfile'.
  func makeDeleteMyProfileInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_DeleteMyProfileRequest, Com_Octopuscommunity_DeleteMyProfileResponse>]

  /// - Returns: Interceptors to use when invoking 'reportUser'.
  func makeReportUserInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_ReportUserRequest, Com_Octopuscommunity_ReportUserResponse>]

  /// - Returns: Interceptors to use when invoking 'blockUser'.
  func makeBlockUserInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_BlockUserRequest, Com_Octopuscommunity_BlockUserResponse>]

  /// - Returns: Interceptors to use when invoking 'searchUser'.
  func makeSearchUserInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_SearchUserRequest, Com_Octopuscommunity_SearchUserResponse>]

  /// - Returns: Interceptors to use when invoking 'getJwtFromClientSignedToken'.
  func makeGetJwtFromClientSignedTokenInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest, Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse>]

  /// - Returns: Interceptors to use when invoking 'getGuestJwt'.
  func makeGetGuestJwtInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_GetGuestJwtRequest, Com_Octopuscommunity_GetGuestJwtResponse>]

  /// - Returns: Interceptors to use when invoking 'canAccessCommunity'.
  func makeCanAccessCommunityInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_CanAccessCommunityRequest, Com_Octopuscommunity_CanAccessCommunityResponse>]

  /// - Returns: Interceptors to use when invoking 'byPassAbTesting'.
  func makeByPassAbTestingInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_ByPassAbTestingRequest, Com_Octopuscommunity_ByPassAbTestingResponse>]

  /// - Returns: Interceptors to use when invoking 'setProfileTag'.
  func makeSetProfileTagInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_SetProfileTagRequest, Com_Octopuscommunity_SetProfileTagResponse>]
}

public enum Com_Octopuscommunity_UserServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "UserService",
    fullName: "com.octopuscommunity.UserService",
    methods: [
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteUser,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.banUser,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.unbanUser,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.shadowBanUser,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.unShadowBanUser,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.createUser,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.createProfile,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.updateProfile,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPublicProfile,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPrivateProfile,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteMyProfile,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.reportUser,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.blockUser,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.searchUser,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.getJwtFromClientSignedToken,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.getGuestJwt,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.canAccessCommunity,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.byPassAbTesting,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.setProfileTag,
    ]
  )

  public enum Methods {
    public static let deleteUser = GRPCMethodDescriptor(
      name: "DeleteUser",
      path: "/com.octopuscommunity.UserService/DeleteUser",
      type: GRPCCallType.unary
    )

    public static let banUser = GRPCMethodDescriptor(
      name: "BanUser",
      path: "/com.octopuscommunity.UserService/BanUser",
      type: GRPCCallType.unary
    )

    public static let unbanUser = GRPCMethodDescriptor(
      name: "UnbanUser",
      path: "/com.octopuscommunity.UserService/UnbanUser",
      type: GRPCCallType.unary
    )

    public static let shadowBanUser = GRPCMethodDescriptor(
      name: "ShadowBanUser",
      path: "/com.octopuscommunity.UserService/ShadowBanUser",
      type: GRPCCallType.unary
    )

    public static let unShadowBanUser = GRPCMethodDescriptor(
      name: "UnShadowBanUser",
      path: "/com.octopuscommunity.UserService/UnShadowBanUser",
      type: GRPCCallType.unary
    )

    public static let createUser = GRPCMethodDescriptor(
      name: "createUser",
      path: "/com.octopuscommunity.UserService/createUser",
      type: GRPCCallType.unary
    )

    public static let createProfile = GRPCMethodDescriptor(
      name: "CreateProfile",
      path: "/com.octopuscommunity.UserService/CreateProfile",
      type: GRPCCallType.unary
    )

    public static let updateProfile = GRPCMethodDescriptor(
      name: "UpdateProfile",
      path: "/com.octopuscommunity.UserService/UpdateProfile",
      type: GRPCCallType.unary
    )

    public static let getPublicProfile = GRPCMethodDescriptor(
      name: "GetPublicProfile",
      path: "/com.octopuscommunity.UserService/GetPublicProfile",
      type: GRPCCallType.unary
    )

    public static let getPrivateProfile = GRPCMethodDescriptor(
      name: "GetPrivateProfile",
      path: "/com.octopuscommunity.UserService/GetPrivateProfile",
      type: GRPCCallType.unary
    )

    public static let deleteMyProfile = GRPCMethodDescriptor(
      name: "DeleteMyProfile",
      path: "/com.octopuscommunity.UserService/DeleteMyProfile",
      type: GRPCCallType.unary
    )

    public static let reportUser = GRPCMethodDescriptor(
      name: "ReportUser",
      path: "/com.octopuscommunity.UserService/ReportUser",
      type: GRPCCallType.unary
    )

    public static let blockUser = GRPCMethodDescriptor(
      name: "BlockUser",
      path: "/com.octopuscommunity.UserService/BlockUser",
      type: GRPCCallType.unary
    )

    public static let searchUser = GRPCMethodDescriptor(
      name: "SearchUser",
      path: "/com.octopuscommunity.UserService/SearchUser",
      type: GRPCCallType.unary
    )

    public static let getJwtFromClientSignedToken = GRPCMethodDescriptor(
      name: "GetJwtFromClientSignedToken",
      path: "/com.octopuscommunity.UserService/GetJwtFromClientSignedToken",
      type: GRPCCallType.unary
    )

    public static let getGuestJwt = GRPCMethodDescriptor(
      name: "GetGuestJwt",
      path: "/com.octopuscommunity.UserService/GetGuestJwt",
      type: GRPCCallType.unary
    )

    public static let canAccessCommunity = GRPCMethodDescriptor(
      name: "CanAccessCommunity",
      path: "/com.octopuscommunity.UserService/CanAccessCommunity",
      type: GRPCCallType.unary
    )

    public static let byPassAbTesting = GRPCMethodDescriptor(
      name: "ByPassAbTesting",
      path: "/com.octopuscommunity.UserService/ByPassAbTesting",
      type: GRPCCallType.unary
    )

    public static let setProfileTag = GRPCMethodDescriptor(
      name: "SetProfileTag",
      path: "/com.octopuscommunity.UserService/SetProfileTag",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Com_Octopuscommunity_UserServiceProvider: CallHandlerProvider {
  var interceptors: Com_Octopuscommunity_UserServiceServerInterceptorFactoryProtocol? { get }

  func deleteUser(request: Com_Octopuscommunity_DeleteUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_DeleteUserResponse>

  ///For BO user only
  func banUser(request: Com_Octopuscommunity_BanUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_BanUserResponse>

  ///For Admin user only
  func unbanUser(request: Com_Octopuscommunity_UnbanUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_UnbanUserResponse>

  ///For BO user only
  func shadowBanUser(request: Com_Octopuscommunity_ShadowBanUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_ShadowBanUserResponse>

  ///For Admin user only
  func unShadowBanUser(request: Com_Octopuscommunity_ShadowUnbanUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_UnShadowBanUserResponse>

  func createUser(request: Com_Octopuscommunity_CreateUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_CreateUserResponse>

  ///Same as UpdateProfile, just help to understand the use case for tracking signup
  func createProfile(request: Com_Octopuscommunity_UpdateProfileRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_UpdateProfileResponse>

  func updateProfile(request: Com_Octopuscommunity_UpdateProfileRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_UpdateProfileResponse>

  func getPublicProfile(request: Com_Octopuscommunity_GetPublicProfileRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_GetPublicProfileResponse>

  func getPrivateProfile(request: Com_Octopuscommunity_GetPrivateProfileRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_GetPrivateProfileResponse>

  func deleteMyProfile(request: Com_Octopuscommunity_DeleteMyProfileRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_DeleteMyProfileResponse>

  func reportUser(request: Com_Octopuscommunity_ReportUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_ReportUserResponse>

  func blockUser(request: Com_Octopuscommunity_BlockUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_BlockUserResponse>

  func searchUser(request: Com_Octopuscommunity_SearchUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_SearchUserResponse>

  func getJwtFromClientSignedToken(request: Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse>

  func getGuestJwt(request: Com_Octopuscommunity_GetGuestJwtRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_GetGuestJwtResponse>

  func canAccessCommunity(request: Com_Octopuscommunity_CanAccessCommunityRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_CanAccessCommunityResponse>

  func byPassAbTesting(request: Com_Octopuscommunity_ByPassAbTestingRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_ByPassAbTestingResponse>

  func setProfileTag(request: Com_Octopuscommunity_SetProfileTagRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_SetProfileTagResponse>
}

extension Com_Octopuscommunity_UserServiceProvider {
  public var serviceName: Substring {
    return Com_Octopuscommunity_UserServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "DeleteUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_DeleteUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_DeleteUserResponse>(),
        interceptors: self.interceptors?.makeDeleteUserInterceptors() ?? [],
        userFunction: self.deleteUser(request:context:)
      )

    case "BanUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_BanUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_BanUserResponse>(),
        interceptors: self.interceptors?.makeBanUserInterceptors() ?? [],
        userFunction: self.banUser(request:context:)
      )

    case "UnbanUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_UnbanUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_UnbanUserResponse>(),
        interceptors: self.interceptors?.makeUnbanUserInterceptors() ?? [],
        userFunction: self.unbanUser(request:context:)
      )

    case "ShadowBanUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ShadowBanUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_ShadowBanUserResponse>(),
        interceptors: self.interceptors?.makeShadowBanUserInterceptors() ?? [],
        userFunction: self.shadowBanUser(request:context:)
      )

    case "UnShadowBanUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ShadowUnbanUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_UnShadowBanUserResponse>(),
        interceptors: self.interceptors?.makeUnShadowBanUserInterceptors() ?? [],
        userFunction: self.unShadowBanUser(request:context:)
      )

    case "createUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_CreateUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_CreateUserResponse>(),
        interceptors: self.interceptors?.makecreateUserInterceptors() ?? [],
        userFunction: self.createUser(request:context:)
      )

    case "CreateProfile":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_UpdateProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_UpdateProfileResponse>(),
        interceptors: self.interceptors?.makeCreateProfileInterceptors() ?? [],
        userFunction: self.createProfile(request:context:)
      )

    case "UpdateProfile":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_UpdateProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_UpdateProfileResponse>(),
        interceptors: self.interceptors?.makeUpdateProfileInterceptors() ?? [],
        userFunction: self.updateProfile(request:context:)
      )

    case "GetPublicProfile":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetPublicProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetPublicProfileResponse>(),
        interceptors: self.interceptors?.makeGetPublicProfileInterceptors() ?? [],
        userFunction: self.getPublicProfile(request:context:)
      )

    case "GetPrivateProfile":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetPrivateProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetPrivateProfileResponse>(),
        interceptors: self.interceptors?.makeGetPrivateProfileInterceptors() ?? [],
        userFunction: self.getPrivateProfile(request:context:)
      )

    case "DeleteMyProfile":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_DeleteMyProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_DeleteMyProfileResponse>(),
        interceptors: self.interceptors?.makeDeleteMyProfileInterceptors() ?? [],
        userFunction: self.deleteMyProfile(request:context:)
      )

    case "ReportUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ReportUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_ReportUserResponse>(),
        interceptors: self.interceptors?.makeReportUserInterceptors() ?? [],
        userFunction: self.reportUser(request:context:)
      )

    case "BlockUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_BlockUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_BlockUserResponse>(),
        interceptors: self.interceptors?.makeBlockUserInterceptors() ?? [],
        userFunction: self.blockUser(request:context:)
      )

    case "SearchUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_SearchUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_SearchUserResponse>(),
        interceptors: self.interceptors?.makeSearchUserInterceptors() ?? [],
        userFunction: self.searchUser(request:context:)
      )

    case "GetJwtFromClientSignedToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse>(),
        interceptors: self.interceptors?.makeGetJwtFromClientSignedTokenInterceptors() ?? [],
        userFunction: self.getJwtFromClientSignedToken(request:context:)
      )

    case "GetGuestJwt":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetGuestJwtRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetGuestJwtResponse>(),
        interceptors: self.interceptors?.makeGetGuestJwtInterceptors() ?? [],
        userFunction: self.getGuestJwt(request:context:)
      )

    case "CanAccessCommunity":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_CanAccessCommunityRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_CanAccessCommunityResponse>(),
        interceptors: self.interceptors?.makeCanAccessCommunityInterceptors() ?? [],
        userFunction: self.canAccessCommunity(request:context:)
      )

    case "ByPassAbTesting":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ByPassAbTestingRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_ByPassAbTestingResponse>(),
        interceptors: self.interceptors?.makeByPassAbTestingInterceptors() ?? [],
        userFunction: self.byPassAbTesting(request:context:)
      )

    case "SetProfileTag":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_SetProfileTagRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_SetProfileTagResponse>(),
        interceptors: self.interceptors?.makeSetProfileTagInterceptors() ?? [],
        userFunction: self.setProfileTag(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Com_Octopuscommunity_UserServiceAsyncProvider: CallHandlerProvider, Sendable {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Com_Octopuscommunity_UserServiceServerInterceptorFactoryProtocol? { get }

  func deleteUser(
    request: Com_Octopuscommunity_DeleteUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_DeleteUserResponse

  ///For BO user only
  func banUser(
    request: Com_Octopuscommunity_BanUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_BanUserResponse

  ///For Admin user only
  func unbanUser(
    request: Com_Octopuscommunity_UnbanUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_UnbanUserResponse

  ///For BO user only
  func shadowBanUser(
    request: Com_Octopuscommunity_ShadowBanUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_ShadowBanUserResponse

  ///For Admin user only
  func unShadowBanUser(
    request: Com_Octopuscommunity_ShadowUnbanUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_UnShadowBanUserResponse

  func createUser(
    request: Com_Octopuscommunity_CreateUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_CreateUserResponse

  ///Same as UpdateProfile, just help to understand the use case for tracking signup
  func createProfile(
    request: Com_Octopuscommunity_UpdateProfileRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_UpdateProfileResponse

  func updateProfile(
    request: Com_Octopuscommunity_UpdateProfileRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_UpdateProfileResponse

  func getPublicProfile(
    request: Com_Octopuscommunity_GetPublicProfileRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_GetPublicProfileResponse

  func getPrivateProfile(
    request: Com_Octopuscommunity_GetPrivateProfileRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_GetPrivateProfileResponse

  func deleteMyProfile(
    request: Com_Octopuscommunity_DeleteMyProfileRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_DeleteMyProfileResponse

  func reportUser(
    request: Com_Octopuscommunity_ReportUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_ReportUserResponse

  func blockUser(
    request: Com_Octopuscommunity_BlockUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_BlockUserResponse

  func searchUser(
    request: Com_Octopuscommunity_SearchUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_SearchUserResponse

  func getJwtFromClientSignedToken(
    request: Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse

  func getGuestJwt(
    request: Com_Octopuscommunity_GetGuestJwtRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_GetGuestJwtResponse

  func canAccessCommunity(
    request: Com_Octopuscommunity_CanAccessCommunityRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_CanAccessCommunityResponse

  func byPassAbTesting(
    request: Com_Octopuscommunity_ByPassAbTestingRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_ByPassAbTestingResponse

  func setProfileTag(
    request: Com_Octopuscommunity_SetProfileTagRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_SetProfileTagResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Com_Octopuscommunity_UserServiceAsyncProvider {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Com_Octopuscommunity_UserServiceServerMetadata.serviceDescriptor
  }

  public var serviceName: Substring {
    return Com_Octopuscommunity_UserServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  public var interceptors: Com_Octopuscommunity_UserServiceServerInterceptorFactoryProtocol? {
    return nil
  }

  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "DeleteUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_DeleteUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_DeleteUserResponse>(),
        interceptors: self.interceptors?.makeDeleteUserInterceptors() ?? [],
        wrapping: { try await self.deleteUser(request: $0, context: $1) }
      )

    case "BanUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_BanUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_BanUserResponse>(),
        interceptors: self.interceptors?.makeBanUserInterceptors() ?? [],
        wrapping: { try await self.banUser(request: $0, context: $1) }
      )

    case "UnbanUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_UnbanUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_UnbanUserResponse>(),
        interceptors: self.interceptors?.makeUnbanUserInterceptors() ?? [],
        wrapping: { try await self.unbanUser(request: $0, context: $1) }
      )

    case "ShadowBanUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ShadowBanUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_ShadowBanUserResponse>(),
        interceptors: self.interceptors?.makeShadowBanUserInterceptors() ?? [],
        wrapping: { try await self.shadowBanUser(request: $0, context: $1) }
      )

    case "UnShadowBanUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ShadowUnbanUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_UnShadowBanUserResponse>(),
        interceptors: self.interceptors?.makeUnShadowBanUserInterceptors() ?? [],
        wrapping: { try await self.unShadowBanUser(request: $0, context: $1) }
      )

    case "createUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_CreateUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_CreateUserResponse>(),
        interceptors: self.interceptors?.makecreateUserInterceptors() ?? [],
        wrapping: { try await self.createUser(request: $0, context: $1) }
      )

    case "CreateProfile":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_UpdateProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_UpdateProfileResponse>(),
        interceptors: self.interceptors?.makeCreateProfileInterceptors() ?? [],
        wrapping: { try await self.createProfile(request: $0, context: $1) }
      )

    case "UpdateProfile":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_UpdateProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_UpdateProfileResponse>(),
        interceptors: self.interceptors?.makeUpdateProfileInterceptors() ?? [],
        wrapping: { try await self.updateProfile(request: $0, context: $1) }
      )

    case "GetPublicProfile":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetPublicProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetPublicProfileResponse>(),
        interceptors: self.interceptors?.makeGetPublicProfileInterceptors() ?? [],
        wrapping: { try await self.getPublicProfile(request: $0, context: $1) }
      )

    case "GetPrivateProfile":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetPrivateProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetPrivateProfileResponse>(),
        interceptors: self.interceptors?.makeGetPrivateProfileInterceptors() ?? [],
        wrapping: { try await self.getPrivateProfile(request: $0, context: $1) }
      )

    case "DeleteMyProfile":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_DeleteMyProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_DeleteMyProfileResponse>(),
        interceptors: self.interceptors?.makeDeleteMyProfileInterceptors() ?? [],
        wrapping: { try await self.deleteMyProfile(request: $0, context: $1) }
      )

    case "ReportUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ReportUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_ReportUserResponse>(),
        interceptors: self.interceptors?.makeReportUserInterceptors() ?? [],
        wrapping: { try await self.reportUser(request: $0, context: $1) }
      )

    case "BlockUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_BlockUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_BlockUserResponse>(),
        interceptors: self.interceptors?.makeBlockUserInterceptors() ?? [],
        wrapping: { try await self.blockUser(request: $0, context: $1) }
      )

    case "SearchUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_SearchUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_SearchUserResponse>(),
        interceptors: self.interceptors?.makeSearchUserInterceptors() ?? [],
        wrapping: { try await self.searchUser(request: $0, context: $1) }
      )

    case "GetJwtFromClientSignedToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse>(),
        interceptors: self.interceptors?.makeGetJwtFromClientSignedTokenInterceptors() ?? [],
        wrapping: { try await self.getJwtFromClientSignedToken(request: $0, context: $1) }
      )

    case "GetGuestJwt":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetGuestJwtRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetGuestJwtResponse>(),
        interceptors: self.interceptors?.makeGetGuestJwtInterceptors() ?? [],
        wrapping: { try await self.getGuestJwt(request: $0, context: $1) }
      )

    case "CanAccessCommunity":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_CanAccessCommunityRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_CanAccessCommunityResponse>(),
        interceptors: self.interceptors?.makeCanAccessCommunityInterceptors() ?? [],
        wrapping: { try await self.canAccessCommunity(request: $0, context: $1) }
      )

    case "ByPassAbTesting":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ByPassAbTestingRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_ByPassAbTestingResponse>(),
        interceptors: self.interceptors?.makeByPassAbTestingInterceptors() ?? [],
        wrapping: { try await self.byPassAbTesting(request: $0, context: $1) }
      )

    case "SetProfileTag":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_SetProfileTagRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_SetProfileTagResponse>(),
        interceptors: self.interceptors?.makeSetProfileTagInterceptors() ?? [],
        wrapping: { try await self.setProfileTag(request: $0, context: $1) }
      )

    default:
      return nil
    }
  }
}

public protocol Com_Octopuscommunity_UserServiceServerInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when handling 'deleteUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteUserInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_DeleteUserRequest, Com_Octopuscommunity_DeleteUserResponse>]

  /// - Returns: Interceptors to use when handling 'banUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBanUserInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_BanUserRequest, Com_Octopuscommunity_BanUserResponse>]

  /// - Returns: Interceptors to use when handling 'unbanUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUnbanUserInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_UnbanUserRequest, Com_Octopuscommunity_UnbanUserResponse>]

  /// - Returns: Interceptors to use when handling 'shadowBanUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeShadowBanUserInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_ShadowBanUserRequest, Com_Octopuscommunity_ShadowBanUserResponse>]

  /// - Returns: Interceptors to use when handling 'unShadowBanUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUnShadowBanUserInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_ShadowUnbanUserRequest, Com_Octopuscommunity_UnShadowBanUserResponse>]

  /// - Returns: Interceptors to use when handling 'createUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makecreateUserInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_CreateUserRequest, Com_Octopuscommunity_CreateUserResponse>]

  /// - Returns: Interceptors to use when handling 'createProfile'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCreateProfileInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse>]

  /// - Returns: Interceptors to use when handling 'updateProfile'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateProfileInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse>]

  /// - Returns: Interceptors to use when handling 'getPublicProfile'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetPublicProfileInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_GetPublicProfileRequest, Com_Octopuscommunity_GetPublicProfileResponse>]

  /// - Returns: Interceptors to use when handling 'getPrivateProfile'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetPrivateProfileInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_GetPrivateProfileRequest, Com_Octopuscommunity_GetPrivateProfileResponse>]

  /// - Returns: Interceptors to use when handling 'deleteMyProfile'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteMyProfileInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_DeleteMyProfileRequest, Com_Octopuscommunity_DeleteMyProfileResponse>]

  /// - Returns: Interceptors to use when handling 'reportUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeReportUserInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_ReportUserRequest, Com_Octopuscommunity_ReportUserResponse>]

  /// - Returns: Interceptors to use when handling 'blockUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBlockUserInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_BlockUserRequest, Com_Octopuscommunity_BlockUserResponse>]

  /// - Returns: Interceptors to use when handling 'searchUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSearchUserInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_SearchUserRequest, Com_Octopuscommunity_SearchUserResponse>]

  /// - Returns: Interceptors to use when handling 'getJwtFromClientSignedToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetJwtFromClientSignedTokenInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest, Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse>]

  /// - Returns: Interceptors to use when handling 'getGuestJwt'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetGuestJwtInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_GetGuestJwtRequest, Com_Octopuscommunity_GetGuestJwtResponse>]

  /// - Returns: Interceptors to use when handling 'canAccessCommunity'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCanAccessCommunityInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_CanAccessCommunityRequest, Com_Octopuscommunity_CanAccessCommunityResponse>]

  /// - Returns: Interceptors to use when handling 'byPassAbTesting'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeByPassAbTestingInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_ByPassAbTestingRequest, Com_Octopuscommunity_ByPassAbTestingResponse>]

  /// - Returns: Interceptors to use when handling 'setProfileTag'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSetProfileTagInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_SetProfileTagRequest, Com_Octopuscommunity_SetProfileTagResponse>]
}

public enum Com_Octopuscommunity_UserServiceServerMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "UserService",
    fullName: "com.octopuscommunity.UserService",
    methods: [
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.deleteUser,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.banUser,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.unbanUser,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.shadowBanUser,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.unShadowBanUser,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.createUser,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.createProfile,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.updateProfile,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.getPublicProfile,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.getPrivateProfile,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.deleteMyProfile,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.reportUser,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.blockUser,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.searchUser,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.getJwtFromClientSignedToken,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.getGuestJwt,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.canAccessCommunity,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.byPassAbTesting,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.setProfileTag,
    ]
  )

  public enum Methods {
    public static let deleteUser = GRPCMethodDescriptor(
      name: "DeleteUser",
      path: "/com.octopuscommunity.UserService/DeleteUser",
      type: GRPCCallType.unary
    )

    public static let banUser = GRPCMethodDescriptor(
      name: "BanUser",
      path: "/com.octopuscommunity.UserService/BanUser",
      type: GRPCCallType.unary
    )

    public static let unbanUser = GRPCMethodDescriptor(
      name: "UnbanUser",
      path: "/com.octopuscommunity.UserService/UnbanUser",
      type: GRPCCallType.unary
    )

    public static let shadowBanUser = GRPCMethodDescriptor(
      name: "ShadowBanUser",
      path: "/com.octopuscommunity.UserService/ShadowBanUser",
      type: GRPCCallType.unary
    )

    public static let unShadowBanUser = GRPCMethodDescriptor(
      name: "UnShadowBanUser",
      path: "/com.octopuscommunity.UserService/UnShadowBanUser",
      type: GRPCCallType.unary
    )

    public static let createUser = GRPCMethodDescriptor(
      name: "createUser",
      path: "/com.octopuscommunity.UserService/createUser",
      type: GRPCCallType.unary
    )

    public static let createProfile = GRPCMethodDescriptor(
      name: "CreateProfile",
      path: "/com.octopuscommunity.UserService/CreateProfile",
      type: GRPCCallType.unary
    )

    public static let updateProfile = GRPCMethodDescriptor(
      name: "UpdateProfile",
      path: "/com.octopuscommunity.UserService/UpdateProfile",
      type: GRPCCallType.unary
    )

    public static let getPublicProfile = GRPCMethodDescriptor(
      name: "GetPublicProfile",
      path: "/com.octopuscommunity.UserService/GetPublicProfile",
      type: GRPCCallType.unary
    )

    public static let getPrivateProfile = GRPCMethodDescriptor(
      name: "GetPrivateProfile",
      path: "/com.octopuscommunity.UserService/GetPrivateProfile",
      type: GRPCCallType.unary
    )

    public static let deleteMyProfile = GRPCMethodDescriptor(
      name: "DeleteMyProfile",
      path: "/com.octopuscommunity.UserService/DeleteMyProfile",
      type: GRPCCallType.unary
    )

    public static let reportUser = GRPCMethodDescriptor(
      name: "ReportUser",
      path: "/com.octopuscommunity.UserService/ReportUser",
      type: GRPCCallType.unary
    )

    public static let blockUser = GRPCMethodDescriptor(
      name: "BlockUser",
      path: "/com.octopuscommunity.UserService/BlockUser",
      type: GRPCCallType.unary
    )

    public static let searchUser = GRPCMethodDescriptor(
      name: "SearchUser",
      path: "/com.octopuscommunity.UserService/SearchUser",
      type: GRPCCallType.unary
    )

    public static let getJwtFromClientSignedToken = GRPCMethodDescriptor(
      name: "GetJwtFromClientSignedToken",
      path: "/com.octopuscommunity.UserService/GetJwtFromClientSignedToken",
      type: GRPCCallType.unary
    )

    public static let getGuestJwt = GRPCMethodDescriptor(
      name: "GetGuestJwt",
      path: "/com.octopuscommunity.UserService/GetGuestJwt",
      type: GRPCCallType.unary
    )

    public static let canAccessCommunity = GRPCMethodDescriptor(
      name: "CanAccessCommunity",
      path: "/com.octopuscommunity.UserService/CanAccessCommunity",
      type: GRPCCallType.unary
    )

    public static let byPassAbTesting = GRPCMethodDescriptor(
      name: "ByPassAbTesting",
      path: "/com.octopuscommunity.UserService/ByPassAbTesting",
      type: GRPCCallType.unary
    )

    public static let setProfileTag = GRPCMethodDescriptor(
      name: "SetProfileTag",
      path: "/com.octopuscommunity.UserService/SetProfileTag",
      type: GRPCCallType.unary
    )
  }
}
