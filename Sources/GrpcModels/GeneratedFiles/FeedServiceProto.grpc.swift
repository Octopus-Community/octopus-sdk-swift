//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: com/octopuscommunity/FeedServiceProto.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Com_Octopuscommunity_FeedServiceClient`, then call methods of this protocol to make API calls.
public protocol Com_Octopuscommunity_FeedServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Com_Octopuscommunity_FeedServiceClientInterceptorFactoryProtocol? { get }

  func getRootFeedsInfo(
    _ request: Com_Octopuscommunity_GetRootFeedsInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_GetRootFeedsInfoRequest, Com_Octopuscommunity_GetRootFeedsInfoResponse>

  func initializeFeedWithOctoObject(
    _ request: Com_Octopuscommunity_InitializeFeedWithOctoObjectRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_InitializeFeedWithOctoObjectRequest, Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse>

  func getFeedWithOctoObjectPage(
    _ request: Com_Octopuscommunity_GetFeedWithOctoObjectPageRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_GetFeedWithOctoObjectPageRequest, Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse>

  func initializeFeed(
    _ request: Com_Octopuscommunity_InitializeFeedRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_InitializeFeedRequest, Com_Octopuscommunity_GetFeedPageResponse>

  func getFeedPage(
    _ request: Com_Octopuscommunity_GetFeedPageRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_GetFeedPageRequest, Com_Octopuscommunity_GetFeedPageResponse>
}

extension Com_Octopuscommunity_FeedServiceClientProtocol {
  public var serviceName: String {
    return "com.octopuscommunity.FeedService"
  }

  /// Unary call to GetRootFeedsInfo
  ///
  /// - Parameters:
  ///   - request: Request to send to GetRootFeedsInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getRootFeedsInfo(
    _ request: Com_Octopuscommunity_GetRootFeedsInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_GetRootFeedsInfoRequest, Com_Octopuscommunity_GetRootFeedsInfoResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_FeedServiceClientMetadata.Methods.getRootFeedsInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRootFeedsInfoInterceptors() ?? []
    )
  }

  /// Unary call to InitializeFeedWithOctoObject
  ///
  /// - Parameters:
  ///   - request: Request to send to InitializeFeedWithOctoObject.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func initializeFeedWithOctoObject(
    _ request: Com_Octopuscommunity_InitializeFeedWithOctoObjectRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_InitializeFeedWithOctoObjectRequest, Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_FeedServiceClientMetadata.Methods.initializeFeedWithOctoObject.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInitializeFeedWithOctoObjectInterceptors() ?? []
    )
  }

  /// Unary call to GetFeedWithOctoObjectPage
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFeedWithOctoObjectPage.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getFeedWithOctoObjectPage(
    _ request: Com_Octopuscommunity_GetFeedWithOctoObjectPageRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_GetFeedWithOctoObjectPageRequest, Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_FeedServiceClientMetadata.Methods.getFeedWithOctoObjectPage.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFeedWithOctoObjectPageInterceptors() ?? []
    )
  }

  ///Normalized version
  ///
  /// - Parameters:
  ///   - request: Request to send to InitializeFeed.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func initializeFeed(
    _ request: Com_Octopuscommunity_InitializeFeedRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_InitializeFeedRequest, Com_Octopuscommunity_GetFeedPageResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_FeedServiceClientMetadata.Methods.initializeFeed.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInitializeFeedInterceptors() ?? []
    )
  }

  /// Unary call to GetFeedPage
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFeedPage.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getFeedPage(
    _ request: Com_Octopuscommunity_GetFeedPageRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_GetFeedPageRequest, Com_Octopuscommunity_GetFeedPageResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_FeedServiceClientMetadata.Methods.getFeedPage.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFeedPageInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Com_Octopuscommunity_FeedServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Com_Octopuscommunity_FeedServiceNIOClient")
public final class Com_Octopuscommunity_FeedServiceClient: Com_Octopuscommunity_FeedServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Com_Octopuscommunity_FeedServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Com_Octopuscommunity_FeedServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the com.octopuscommunity.FeedService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Com_Octopuscommunity_FeedServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Com_Octopuscommunity_FeedServiceNIOClient: Com_Octopuscommunity_FeedServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Com_Octopuscommunity_FeedServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the com.octopuscommunity.FeedService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Com_Octopuscommunity_FeedServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Com_Octopuscommunity_FeedServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Com_Octopuscommunity_FeedServiceClientInterceptorFactoryProtocol? { get }

  func makeGetRootFeedsInfoCall(
    _ request: Com_Octopuscommunity_GetRootFeedsInfoRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetRootFeedsInfoRequest, Com_Octopuscommunity_GetRootFeedsInfoResponse>

  func makeInitializeFeedWithOctoObjectCall(
    _ request: Com_Octopuscommunity_InitializeFeedWithOctoObjectRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_InitializeFeedWithOctoObjectRequest, Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse>

  func makeGetFeedWithOctoObjectPageCall(
    _ request: Com_Octopuscommunity_GetFeedWithOctoObjectPageRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetFeedWithOctoObjectPageRequest, Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse>

  func makeInitializeFeedCall(
    _ request: Com_Octopuscommunity_InitializeFeedRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_InitializeFeedRequest, Com_Octopuscommunity_GetFeedPageResponse>

  func makeGetFeedPageCall(
    _ request: Com_Octopuscommunity_GetFeedPageRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetFeedPageRequest, Com_Octopuscommunity_GetFeedPageResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Com_Octopuscommunity_FeedServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Com_Octopuscommunity_FeedServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Com_Octopuscommunity_FeedServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetRootFeedsInfoCall(
    _ request: Com_Octopuscommunity_GetRootFeedsInfoRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetRootFeedsInfoRequest, Com_Octopuscommunity_GetRootFeedsInfoResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_FeedServiceClientMetadata.Methods.getRootFeedsInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRootFeedsInfoInterceptors() ?? []
    )
  }

  public func makeInitializeFeedWithOctoObjectCall(
    _ request: Com_Octopuscommunity_InitializeFeedWithOctoObjectRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_InitializeFeedWithOctoObjectRequest, Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_FeedServiceClientMetadata.Methods.initializeFeedWithOctoObject.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInitializeFeedWithOctoObjectInterceptors() ?? []
    )
  }

  public func makeGetFeedWithOctoObjectPageCall(
    _ request: Com_Octopuscommunity_GetFeedWithOctoObjectPageRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetFeedWithOctoObjectPageRequest, Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_FeedServiceClientMetadata.Methods.getFeedWithOctoObjectPage.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFeedWithOctoObjectPageInterceptors() ?? []
    )
  }

  public func makeInitializeFeedCall(
    _ request: Com_Octopuscommunity_InitializeFeedRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_InitializeFeedRequest, Com_Octopuscommunity_GetFeedPageResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_FeedServiceClientMetadata.Methods.initializeFeed.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInitializeFeedInterceptors() ?? []
    )
  }

  public func makeGetFeedPageCall(
    _ request: Com_Octopuscommunity_GetFeedPageRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetFeedPageRequest, Com_Octopuscommunity_GetFeedPageResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_FeedServiceClientMetadata.Methods.getFeedPage.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFeedPageInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Com_Octopuscommunity_FeedServiceAsyncClientProtocol {
  public func getRootFeedsInfo(
    _ request: Com_Octopuscommunity_GetRootFeedsInfoRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_GetRootFeedsInfoResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_FeedServiceClientMetadata.Methods.getRootFeedsInfo.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRootFeedsInfoInterceptors() ?? []
    )
  }

  public func initializeFeedWithOctoObject(
    _ request: Com_Octopuscommunity_InitializeFeedWithOctoObjectRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_FeedServiceClientMetadata.Methods.initializeFeedWithOctoObject.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInitializeFeedWithOctoObjectInterceptors() ?? []
    )
  }

  public func getFeedWithOctoObjectPage(
    _ request: Com_Octopuscommunity_GetFeedWithOctoObjectPageRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_FeedServiceClientMetadata.Methods.getFeedWithOctoObjectPage.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFeedWithOctoObjectPageInterceptors() ?? []
    )
  }

  public func initializeFeed(
    _ request: Com_Octopuscommunity_InitializeFeedRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_GetFeedPageResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_FeedServiceClientMetadata.Methods.initializeFeed.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeInitializeFeedInterceptors() ?? []
    )
  }

  public func getFeedPage(
    _ request: Com_Octopuscommunity_GetFeedPageRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_GetFeedPageResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_FeedServiceClientMetadata.Methods.getFeedPage.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFeedPageInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Com_Octopuscommunity_FeedServiceAsyncClient: Com_Octopuscommunity_FeedServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Com_Octopuscommunity_FeedServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Com_Octopuscommunity_FeedServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Com_Octopuscommunity_FeedServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getRootFeedsInfo'.
  func makeGetRootFeedsInfoInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_GetRootFeedsInfoRequest, Com_Octopuscommunity_GetRootFeedsInfoResponse>]

  /// - Returns: Interceptors to use when invoking 'initializeFeedWithOctoObject'.
  func makeInitializeFeedWithOctoObjectInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_InitializeFeedWithOctoObjectRequest, Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse>]

  /// - Returns: Interceptors to use when invoking 'getFeedWithOctoObjectPage'.
  func makeGetFeedWithOctoObjectPageInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_GetFeedWithOctoObjectPageRequest, Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse>]

  /// - Returns: Interceptors to use when invoking 'initializeFeed'.
  func makeInitializeFeedInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_InitializeFeedRequest, Com_Octopuscommunity_GetFeedPageResponse>]

  /// - Returns: Interceptors to use when invoking 'getFeedPage'.
  func makeGetFeedPageInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_GetFeedPageRequest, Com_Octopuscommunity_GetFeedPageResponse>]
}

public enum Com_Octopuscommunity_FeedServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "FeedService",
    fullName: "com.octopuscommunity.FeedService",
    methods: [
      Com_Octopuscommunity_FeedServiceClientMetadata.Methods.getRootFeedsInfo,
      Com_Octopuscommunity_FeedServiceClientMetadata.Methods.initializeFeedWithOctoObject,
      Com_Octopuscommunity_FeedServiceClientMetadata.Methods.getFeedWithOctoObjectPage,
      Com_Octopuscommunity_FeedServiceClientMetadata.Methods.initializeFeed,
      Com_Octopuscommunity_FeedServiceClientMetadata.Methods.getFeedPage,
    ]
  )

  public enum Methods {
    public static let getRootFeedsInfo = GRPCMethodDescriptor(
      name: "GetRootFeedsInfo",
      path: "/com.octopuscommunity.FeedService/GetRootFeedsInfo",
      type: GRPCCallType.unary
    )

    public static let initializeFeedWithOctoObject = GRPCMethodDescriptor(
      name: "InitializeFeedWithOctoObject",
      path: "/com.octopuscommunity.FeedService/InitializeFeedWithOctoObject",
      type: GRPCCallType.unary
    )

    public static let getFeedWithOctoObjectPage = GRPCMethodDescriptor(
      name: "GetFeedWithOctoObjectPage",
      path: "/com.octopuscommunity.FeedService/GetFeedWithOctoObjectPage",
      type: GRPCCallType.unary
    )

    public static let initializeFeed = GRPCMethodDescriptor(
      name: "InitializeFeed",
      path: "/com.octopuscommunity.FeedService/InitializeFeed",
      type: GRPCCallType.unary
    )

    public static let getFeedPage = GRPCMethodDescriptor(
      name: "GetFeedPage",
      path: "/com.octopuscommunity.FeedService/GetFeedPage",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Com_Octopuscommunity_FeedServiceProvider: CallHandlerProvider {
  var interceptors: Com_Octopuscommunity_FeedServiceServerInterceptorFactoryProtocol? { get }

  func getRootFeedsInfo(request: Com_Octopuscommunity_GetRootFeedsInfoRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_GetRootFeedsInfoResponse>

  func initializeFeedWithOctoObject(request: Com_Octopuscommunity_InitializeFeedWithOctoObjectRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse>

  func getFeedWithOctoObjectPage(request: Com_Octopuscommunity_GetFeedWithOctoObjectPageRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse>

  ///Normalized version
  func initializeFeed(request: Com_Octopuscommunity_InitializeFeedRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_GetFeedPageResponse>

  func getFeedPage(request: Com_Octopuscommunity_GetFeedPageRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_GetFeedPageResponse>
}

extension Com_Octopuscommunity_FeedServiceProvider {
  public var serviceName: Substring {
    return Com_Octopuscommunity_FeedServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "GetRootFeedsInfo":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetRootFeedsInfoRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetRootFeedsInfoResponse>(),
        interceptors: self.interceptors?.makeGetRootFeedsInfoInterceptors() ?? [],
        userFunction: self.getRootFeedsInfo(request:context:)
      )

    case "InitializeFeedWithOctoObject":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_InitializeFeedWithOctoObjectRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse>(),
        interceptors: self.interceptors?.makeInitializeFeedWithOctoObjectInterceptors() ?? [],
        userFunction: self.initializeFeedWithOctoObject(request:context:)
      )

    case "GetFeedWithOctoObjectPage":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetFeedWithOctoObjectPageRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse>(),
        interceptors: self.interceptors?.makeGetFeedWithOctoObjectPageInterceptors() ?? [],
        userFunction: self.getFeedWithOctoObjectPage(request:context:)
      )

    case "InitializeFeed":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_InitializeFeedRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetFeedPageResponse>(),
        interceptors: self.interceptors?.makeInitializeFeedInterceptors() ?? [],
        userFunction: self.initializeFeed(request:context:)
      )

    case "GetFeedPage":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetFeedPageRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetFeedPageResponse>(),
        interceptors: self.interceptors?.makeGetFeedPageInterceptors() ?? [],
        userFunction: self.getFeedPage(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Com_Octopuscommunity_FeedServiceAsyncProvider: CallHandlerProvider, Sendable {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Com_Octopuscommunity_FeedServiceServerInterceptorFactoryProtocol? { get }

  func getRootFeedsInfo(
    request: Com_Octopuscommunity_GetRootFeedsInfoRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_GetRootFeedsInfoResponse

  func initializeFeedWithOctoObject(
    request: Com_Octopuscommunity_InitializeFeedWithOctoObjectRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse

  func getFeedWithOctoObjectPage(
    request: Com_Octopuscommunity_GetFeedWithOctoObjectPageRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse

  ///Normalized version
  func initializeFeed(
    request: Com_Octopuscommunity_InitializeFeedRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_GetFeedPageResponse

  func getFeedPage(
    request: Com_Octopuscommunity_GetFeedPageRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_GetFeedPageResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Com_Octopuscommunity_FeedServiceAsyncProvider {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Com_Octopuscommunity_FeedServiceServerMetadata.serviceDescriptor
  }

  public var serviceName: Substring {
    return Com_Octopuscommunity_FeedServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  public var interceptors: Com_Octopuscommunity_FeedServiceServerInterceptorFactoryProtocol? {
    return nil
  }

  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "GetRootFeedsInfo":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetRootFeedsInfoRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetRootFeedsInfoResponse>(),
        interceptors: self.interceptors?.makeGetRootFeedsInfoInterceptors() ?? [],
        wrapping: { try await self.getRootFeedsInfo(request: $0, context: $1) }
      )

    case "InitializeFeedWithOctoObject":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_InitializeFeedWithOctoObjectRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse>(),
        interceptors: self.interceptors?.makeInitializeFeedWithOctoObjectInterceptors() ?? [],
        wrapping: { try await self.initializeFeedWithOctoObject(request: $0, context: $1) }
      )

    case "GetFeedWithOctoObjectPage":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetFeedWithOctoObjectPageRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse>(),
        interceptors: self.interceptors?.makeGetFeedWithOctoObjectPageInterceptors() ?? [],
        wrapping: { try await self.getFeedWithOctoObjectPage(request: $0, context: $1) }
      )

    case "InitializeFeed":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_InitializeFeedRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetFeedPageResponse>(),
        interceptors: self.interceptors?.makeInitializeFeedInterceptors() ?? [],
        wrapping: { try await self.initializeFeed(request: $0, context: $1) }
      )

    case "GetFeedPage":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetFeedPageRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetFeedPageResponse>(),
        interceptors: self.interceptors?.makeGetFeedPageInterceptors() ?? [],
        wrapping: { try await self.getFeedPage(request: $0, context: $1) }
      )

    default:
      return nil
    }
  }
}

public protocol Com_Octopuscommunity_FeedServiceServerInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when handling 'getRootFeedsInfo'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetRootFeedsInfoInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_GetRootFeedsInfoRequest, Com_Octopuscommunity_GetRootFeedsInfoResponse>]

  /// - Returns: Interceptors to use when handling 'initializeFeedWithOctoObject'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInitializeFeedWithOctoObjectInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_InitializeFeedWithOctoObjectRequest, Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse>]

  /// - Returns: Interceptors to use when handling 'getFeedWithOctoObjectPage'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetFeedWithOctoObjectPageInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_GetFeedWithOctoObjectPageRequest, Com_Octopuscommunity_GetFeedWithOctoObjectPageResponse>]

  /// - Returns: Interceptors to use when handling 'initializeFeed'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeInitializeFeedInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_InitializeFeedRequest, Com_Octopuscommunity_GetFeedPageResponse>]

  /// - Returns: Interceptors to use when handling 'getFeedPage'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetFeedPageInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_GetFeedPageRequest, Com_Octopuscommunity_GetFeedPageResponse>]
}

public enum Com_Octopuscommunity_FeedServiceServerMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "FeedService",
    fullName: "com.octopuscommunity.FeedService",
    methods: [
      Com_Octopuscommunity_FeedServiceServerMetadata.Methods.getRootFeedsInfo,
      Com_Octopuscommunity_FeedServiceServerMetadata.Methods.initializeFeedWithOctoObject,
      Com_Octopuscommunity_FeedServiceServerMetadata.Methods.getFeedWithOctoObjectPage,
      Com_Octopuscommunity_FeedServiceServerMetadata.Methods.initializeFeed,
      Com_Octopuscommunity_FeedServiceServerMetadata.Methods.getFeedPage,
    ]
  )

  public enum Methods {
    public static let getRootFeedsInfo = GRPCMethodDescriptor(
      name: "GetRootFeedsInfo",
      path: "/com.octopuscommunity.FeedService/GetRootFeedsInfo",
      type: GRPCCallType.unary
    )

    public static let initializeFeedWithOctoObject = GRPCMethodDescriptor(
      name: "InitializeFeedWithOctoObject",
      path: "/com.octopuscommunity.FeedService/InitializeFeedWithOctoObject",
      type: GRPCCallType.unary
    )

    public static let getFeedWithOctoObjectPage = GRPCMethodDescriptor(
      name: "GetFeedWithOctoObjectPage",
      path: "/com.octopuscommunity.FeedService/GetFeedWithOctoObjectPage",
      type: GRPCCallType.unary
    )

    public static let initializeFeed = GRPCMethodDescriptor(
      name: "InitializeFeed",
      path: "/com.octopuscommunity.FeedService/InitializeFeed",
      type: GRPCCallType.unary
    )

    public static let getFeedPage = GRPCMethodDescriptor(
      name: "GetFeedPage",
      path: "/com.octopuscommunity.FeedService/GetFeedPage",
      type: GRPCCallType.unary
    )
  }
}
