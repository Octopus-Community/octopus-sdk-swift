//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: com/octopuscommunity/UserServiceProto.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Com_Octopuscommunity_UserServiceClient`, then call methods of this protocol to make API calls.
public protocol Com_Octopuscommunity_UserServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol? { get }

  func deleteUser(
    _ request: Com_Octopuscommunity_DeleteUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_DeleteUserRequest, Com_Octopuscommunity_DeleteUserResponse>

  func banUser(
    _ request: Com_Octopuscommunity_BanUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_BanUserRequest, Com_Octopuscommunity_BanUserResponse>

  func unbanUser(
    _ request: Com_Octopuscommunity_UnbanUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_UnbanUserRequest, Com_Octopuscommunity_UnbanUserResponse>

  func createUser(
    _ request: Com_Octopuscommunity_CreateUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_CreateUserRequest, Com_Octopuscommunity_CreateUserResponse>

  func updateProfile(
    _ request: Com_Octopuscommunity_UpdateProfileRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse>

  func getPublicProfile(
    _ request: Com_Octopuscommunity_GetPublicProfileRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_GetPublicProfileRequest, Com_Octopuscommunity_GetPublicProfileResponse>

  func getPrivateProfile(
    _ request: Com_Octopuscommunity_GetPrivateProfileRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_GetPrivateProfileRequest, Com_Octopuscommunity_GetPrivateProfileResponse>

  func deleteMyProfile(
    _ request: Com_Octopuscommunity_DeleteMyProfileRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_DeleteMyProfileRequest, Com_Octopuscommunity_DeleteMyProfileResponse>

  func reportUser(
    _ request: Com_Octopuscommunity_ReportUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_ReportUserRequest, Com_Octopuscommunity_ReportUserResponse>

  func blockUser(
    _ request: Com_Octopuscommunity_BlockUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_BlockUserRequest, Com_Octopuscommunity_BlockUserResponse>

  func getJwtFromClientSignedToken(
    _ request: Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest, Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse>
}

extension Com_Octopuscommunity_UserServiceClientProtocol {
  public var serviceName: String {
    return "com.octopuscommunity.UserService"
  }

  /// Unary call to DeleteUser
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteUser(
    _ request: Com_Octopuscommunity_DeleteUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_DeleteUserRequest, Com_Octopuscommunity_DeleteUserResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserInterceptors() ?? []
    )
  }

  ///For BO user only
  ///
  /// - Parameters:
  ///   - request: Request to send to BanUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func banUser(
    _ request: Com_Octopuscommunity_BanUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_BanUserRequest, Com_Octopuscommunity_BanUserResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.banUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBanUserInterceptors() ?? []
    )
  }

  ///For Admin user only
  ///
  /// - Parameters:
  ///   - request: Request to send to UnbanUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func unbanUser(
    _ request: Com_Octopuscommunity_UnbanUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_UnbanUserRequest, Com_Octopuscommunity_UnbanUserResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.unbanUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbanUserInterceptors() ?? []
    )
  }

  /// Unary call to createUser
  ///
  /// - Parameters:
  ///   - request: Request to send to createUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createUser(
    _ request: Com_Octopuscommunity_CreateUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_CreateUserRequest, Com_Octopuscommunity_CreateUserResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.createUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makecreateUserInterceptors() ?? []
    )
  }

  /// Unary call to UpdateProfile
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateProfile.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateProfile(
    _ request: Com_Octopuscommunity_UpdateProfileRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.updateProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateProfileInterceptors() ?? []
    )
  }

  /// Unary call to GetPublicProfile
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPublicProfile.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getPublicProfile(
    _ request: Com_Octopuscommunity_GetPublicProfileRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_GetPublicProfileRequest, Com_Octopuscommunity_GetPublicProfileResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPublicProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPublicProfileInterceptors() ?? []
    )
  }

  /// Unary call to GetPrivateProfile
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPrivateProfile.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getPrivateProfile(
    _ request: Com_Octopuscommunity_GetPrivateProfileRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_GetPrivateProfileRequest, Com_Octopuscommunity_GetPrivateProfileResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPrivateProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPrivateProfileInterceptors() ?? []
    )
  }

  /// Unary call to DeleteMyProfile
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteMyProfile.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteMyProfile(
    _ request: Com_Octopuscommunity_DeleteMyProfileRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_DeleteMyProfileRequest, Com_Octopuscommunity_DeleteMyProfileResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteMyProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteMyProfileInterceptors() ?? []
    )
  }

  /// Unary call to ReportUser
  ///
  /// - Parameters:
  ///   - request: Request to send to ReportUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func reportUser(
    _ request: Com_Octopuscommunity_ReportUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_ReportUserRequest, Com_Octopuscommunity_ReportUserResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.reportUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReportUserInterceptors() ?? []
    )
  }

  /// Unary call to BlockUser
  ///
  /// - Parameters:
  ///   - request: Request to send to BlockUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func blockUser(
    _ request: Com_Octopuscommunity_BlockUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_BlockUserRequest, Com_Octopuscommunity_BlockUserResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.blockUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBlockUserInterceptors() ?? []
    )
  }

  /// Unary call to GetJwtFromClientSignedToken
  ///
  /// - Parameters:
  ///   - request: Request to send to GetJwtFromClientSignedToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getJwtFromClientSignedToken(
    _ request: Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest, Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse> {
    return self.makeUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getJwtFromClientSignedToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetJwtFromClientSignedTokenInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Com_Octopuscommunity_UserServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Com_Octopuscommunity_UserServiceNIOClient")
public final class Com_Octopuscommunity_UserServiceClient: Com_Octopuscommunity_UserServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the com.octopuscommunity.UserService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Com_Octopuscommunity_UserServiceNIOClient: Com_Octopuscommunity_UserServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the com.octopuscommunity.UserService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Com_Octopuscommunity_UserServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol? { get }

  func makeDeleteUserCall(
    _ request: Com_Octopuscommunity_DeleteUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_DeleteUserRequest, Com_Octopuscommunity_DeleteUserResponse>

  func makeBanUserCall(
    _ request: Com_Octopuscommunity_BanUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_BanUserRequest, Com_Octopuscommunity_BanUserResponse>

  func makeUnbanUserCall(
    _ request: Com_Octopuscommunity_UnbanUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_UnbanUserRequest, Com_Octopuscommunity_UnbanUserResponse>

  func makeCreateUserCall(
    _ request: Com_Octopuscommunity_CreateUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_CreateUserRequest, Com_Octopuscommunity_CreateUserResponse>

  func makeUpdateProfileCall(
    _ request: Com_Octopuscommunity_UpdateProfileRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse>

  func makeGetPublicProfileCall(
    _ request: Com_Octopuscommunity_GetPublicProfileRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetPublicProfileRequest, Com_Octopuscommunity_GetPublicProfileResponse>

  func makeGetPrivateProfileCall(
    _ request: Com_Octopuscommunity_GetPrivateProfileRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetPrivateProfileRequest, Com_Octopuscommunity_GetPrivateProfileResponse>

  func makeDeleteMyProfileCall(
    _ request: Com_Octopuscommunity_DeleteMyProfileRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_DeleteMyProfileRequest, Com_Octopuscommunity_DeleteMyProfileResponse>

  func makeReportUserCall(
    _ request: Com_Octopuscommunity_ReportUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ReportUserRequest, Com_Octopuscommunity_ReportUserResponse>

  func makeBlockUserCall(
    _ request: Com_Octopuscommunity_BlockUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_BlockUserRequest, Com_Octopuscommunity_BlockUserResponse>

  func makeGetJwtFromClientSignedTokenCall(
    _ request: Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest, Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Com_Octopuscommunity_UserServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Com_Octopuscommunity_UserServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeDeleteUserCall(
    _ request: Com_Octopuscommunity_DeleteUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_DeleteUserRequest, Com_Octopuscommunity_DeleteUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserInterceptors() ?? []
    )
  }

  public func makeBanUserCall(
    _ request: Com_Octopuscommunity_BanUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_BanUserRequest, Com_Octopuscommunity_BanUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.banUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBanUserInterceptors() ?? []
    )
  }

  public func makeUnbanUserCall(
    _ request: Com_Octopuscommunity_UnbanUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_UnbanUserRequest, Com_Octopuscommunity_UnbanUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.unbanUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbanUserInterceptors() ?? []
    )
  }

  public func makeCreateUserCall(
    _ request: Com_Octopuscommunity_CreateUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_CreateUserRequest, Com_Octopuscommunity_CreateUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.createUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makecreateUserInterceptors() ?? []
    )
  }

  public func makeUpdateProfileCall(
    _ request: Com_Octopuscommunity_UpdateProfileRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.updateProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateProfileInterceptors() ?? []
    )
  }

  public func makeGetPublicProfileCall(
    _ request: Com_Octopuscommunity_GetPublicProfileRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetPublicProfileRequest, Com_Octopuscommunity_GetPublicProfileResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPublicProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPublicProfileInterceptors() ?? []
    )
  }

  public func makeGetPrivateProfileCall(
    _ request: Com_Octopuscommunity_GetPrivateProfileRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetPrivateProfileRequest, Com_Octopuscommunity_GetPrivateProfileResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPrivateProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPrivateProfileInterceptors() ?? []
    )
  }

  public func makeDeleteMyProfileCall(
    _ request: Com_Octopuscommunity_DeleteMyProfileRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_DeleteMyProfileRequest, Com_Octopuscommunity_DeleteMyProfileResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteMyProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteMyProfileInterceptors() ?? []
    )
  }

  public func makeReportUserCall(
    _ request: Com_Octopuscommunity_ReportUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_ReportUserRequest, Com_Octopuscommunity_ReportUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.reportUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReportUserInterceptors() ?? []
    )
  }

  public func makeBlockUserCall(
    _ request: Com_Octopuscommunity_BlockUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_BlockUserRequest, Com_Octopuscommunity_BlockUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.blockUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBlockUserInterceptors() ?? []
    )
  }

  public func makeGetJwtFromClientSignedTokenCall(
    _ request: Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest, Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse> {
    return self.makeAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getJwtFromClientSignedToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetJwtFromClientSignedTokenInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Com_Octopuscommunity_UserServiceAsyncClientProtocol {
  public func deleteUser(
    _ request: Com_Octopuscommunity_DeleteUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_DeleteUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUserInterceptors() ?? []
    )
  }

  public func banUser(
    _ request: Com_Octopuscommunity_BanUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_BanUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.banUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBanUserInterceptors() ?? []
    )
  }

  public func unbanUser(
    _ request: Com_Octopuscommunity_UnbanUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_UnbanUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.unbanUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUnbanUserInterceptors() ?? []
    )
  }

  public func createUser(
    _ request: Com_Octopuscommunity_CreateUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_CreateUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.createUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makecreateUserInterceptors() ?? []
    )
  }

  public func updateProfile(
    _ request: Com_Octopuscommunity_UpdateProfileRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_UpdateProfileResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.updateProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateProfileInterceptors() ?? []
    )
  }

  public func getPublicProfile(
    _ request: Com_Octopuscommunity_GetPublicProfileRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_GetPublicProfileResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPublicProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPublicProfileInterceptors() ?? []
    )
  }

  public func getPrivateProfile(
    _ request: Com_Octopuscommunity_GetPrivateProfileRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_GetPrivateProfileResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPrivateProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPrivateProfileInterceptors() ?? []
    )
  }

  public func deleteMyProfile(
    _ request: Com_Octopuscommunity_DeleteMyProfileRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_DeleteMyProfileResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteMyProfile.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteMyProfileInterceptors() ?? []
    )
  }

  public func reportUser(
    _ request: Com_Octopuscommunity_ReportUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_ReportUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.reportUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeReportUserInterceptors() ?? []
    )
  }

  public func blockUser(
    _ request: Com_Octopuscommunity_BlockUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_BlockUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.blockUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeBlockUserInterceptors() ?? []
    )
  }

  public func getJwtFromClientSignedToken(
    _ request: Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse {
    return try await self.performAsyncUnaryCall(
      path: Com_Octopuscommunity_UserServiceClientMetadata.Methods.getJwtFromClientSignedToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetJwtFromClientSignedTokenInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Com_Octopuscommunity_UserServiceAsyncClient: Com_Octopuscommunity_UserServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Com_Octopuscommunity_UserServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'deleteUser'.
  func makeDeleteUserInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_DeleteUserRequest, Com_Octopuscommunity_DeleteUserResponse>]

  /// - Returns: Interceptors to use when invoking 'banUser'.
  func makeBanUserInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_BanUserRequest, Com_Octopuscommunity_BanUserResponse>]

  /// - Returns: Interceptors to use when invoking 'unbanUser'.
  func makeUnbanUserInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_UnbanUserRequest, Com_Octopuscommunity_UnbanUserResponse>]

  /// - Returns: Interceptors to use when invoking 'createUser'.
  func makecreateUserInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_CreateUserRequest, Com_Octopuscommunity_CreateUserResponse>]

  /// - Returns: Interceptors to use when invoking 'updateProfile'.
  func makeUpdateProfileInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse>]

  /// - Returns: Interceptors to use when invoking 'getPublicProfile'.
  func makeGetPublicProfileInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_GetPublicProfileRequest, Com_Octopuscommunity_GetPublicProfileResponse>]

  /// - Returns: Interceptors to use when invoking 'getPrivateProfile'.
  func makeGetPrivateProfileInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_GetPrivateProfileRequest, Com_Octopuscommunity_GetPrivateProfileResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteMyProfile'.
  func makeDeleteMyProfileInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_DeleteMyProfileRequest, Com_Octopuscommunity_DeleteMyProfileResponse>]

  /// - Returns: Interceptors to use when invoking 'reportUser'.
  func makeReportUserInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_ReportUserRequest, Com_Octopuscommunity_ReportUserResponse>]

  /// - Returns: Interceptors to use when invoking 'blockUser'.
  func makeBlockUserInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_BlockUserRequest, Com_Octopuscommunity_BlockUserResponse>]

  /// - Returns: Interceptors to use when invoking 'getJwtFromClientSignedToken'.
  func makeGetJwtFromClientSignedTokenInterceptors() -> [ClientInterceptor<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest, Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse>]
}

public enum Com_Octopuscommunity_UserServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "UserService",
    fullName: "com.octopuscommunity.UserService",
    methods: [
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteUser,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.banUser,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.unbanUser,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.createUser,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.updateProfile,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPublicProfile,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.getPrivateProfile,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.deleteMyProfile,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.reportUser,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.blockUser,
      Com_Octopuscommunity_UserServiceClientMetadata.Methods.getJwtFromClientSignedToken,
    ]
  )

  public enum Methods {
    public static let deleteUser = GRPCMethodDescriptor(
      name: "DeleteUser",
      path: "/com.octopuscommunity.UserService/DeleteUser",
      type: GRPCCallType.unary
    )

    public static let banUser = GRPCMethodDescriptor(
      name: "BanUser",
      path: "/com.octopuscommunity.UserService/BanUser",
      type: GRPCCallType.unary
    )

    public static let unbanUser = GRPCMethodDescriptor(
      name: "UnbanUser",
      path: "/com.octopuscommunity.UserService/UnbanUser",
      type: GRPCCallType.unary
    )

    public static let createUser = GRPCMethodDescriptor(
      name: "createUser",
      path: "/com.octopuscommunity.UserService/createUser",
      type: GRPCCallType.unary
    )

    public static let updateProfile = GRPCMethodDescriptor(
      name: "UpdateProfile",
      path: "/com.octopuscommunity.UserService/UpdateProfile",
      type: GRPCCallType.unary
    )

    public static let getPublicProfile = GRPCMethodDescriptor(
      name: "GetPublicProfile",
      path: "/com.octopuscommunity.UserService/GetPublicProfile",
      type: GRPCCallType.unary
    )

    public static let getPrivateProfile = GRPCMethodDescriptor(
      name: "GetPrivateProfile",
      path: "/com.octopuscommunity.UserService/GetPrivateProfile",
      type: GRPCCallType.unary
    )

    public static let deleteMyProfile = GRPCMethodDescriptor(
      name: "DeleteMyProfile",
      path: "/com.octopuscommunity.UserService/DeleteMyProfile",
      type: GRPCCallType.unary
    )

    public static let reportUser = GRPCMethodDescriptor(
      name: "ReportUser",
      path: "/com.octopuscommunity.UserService/ReportUser",
      type: GRPCCallType.unary
    )

    public static let blockUser = GRPCMethodDescriptor(
      name: "BlockUser",
      path: "/com.octopuscommunity.UserService/BlockUser",
      type: GRPCCallType.unary
    )

    public static let getJwtFromClientSignedToken = GRPCMethodDescriptor(
      name: "GetJwtFromClientSignedToken",
      path: "/com.octopuscommunity.UserService/GetJwtFromClientSignedToken",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
public protocol Com_Octopuscommunity_UserServiceProvider: CallHandlerProvider {
  var interceptors: Com_Octopuscommunity_UserServiceServerInterceptorFactoryProtocol? { get }

  func deleteUser(request: Com_Octopuscommunity_DeleteUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_DeleteUserResponse>

  ///For BO user only
  func banUser(request: Com_Octopuscommunity_BanUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_BanUserResponse>

  ///For Admin user only
  func unbanUser(request: Com_Octopuscommunity_UnbanUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_UnbanUserResponse>

  func createUser(request: Com_Octopuscommunity_CreateUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_CreateUserResponse>

  func updateProfile(request: Com_Octopuscommunity_UpdateProfileRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_UpdateProfileResponse>

  func getPublicProfile(request: Com_Octopuscommunity_GetPublicProfileRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_GetPublicProfileResponse>

  func getPrivateProfile(request: Com_Octopuscommunity_GetPrivateProfileRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_GetPrivateProfileResponse>

  func deleteMyProfile(request: Com_Octopuscommunity_DeleteMyProfileRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_DeleteMyProfileResponse>

  func reportUser(request: Com_Octopuscommunity_ReportUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_ReportUserResponse>

  func blockUser(request: Com_Octopuscommunity_BlockUserRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_BlockUserResponse>

  func getJwtFromClientSignedToken(request: Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse>
}

extension Com_Octopuscommunity_UserServiceProvider {
  public var serviceName: Substring {
    return Com_Octopuscommunity_UserServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "DeleteUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_DeleteUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_DeleteUserResponse>(),
        interceptors: self.interceptors?.makeDeleteUserInterceptors() ?? [],
        userFunction: self.deleteUser(request:context:)
      )

    case "BanUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_BanUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_BanUserResponse>(),
        interceptors: self.interceptors?.makeBanUserInterceptors() ?? [],
        userFunction: self.banUser(request:context:)
      )

    case "UnbanUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_UnbanUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_UnbanUserResponse>(),
        interceptors: self.interceptors?.makeUnbanUserInterceptors() ?? [],
        userFunction: self.unbanUser(request:context:)
      )

    case "createUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_CreateUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_CreateUserResponse>(),
        interceptors: self.interceptors?.makecreateUserInterceptors() ?? [],
        userFunction: self.createUser(request:context:)
      )

    case "UpdateProfile":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_UpdateProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_UpdateProfileResponse>(),
        interceptors: self.interceptors?.makeUpdateProfileInterceptors() ?? [],
        userFunction: self.updateProfile(request:context:)
      )

    case "GetPublicProfile":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetPublicProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetPublicProfileResponse>(),
        interceptors: self.interceptors?.makeGetPublicProfileInterceptors() ?? [],
        userFunction: self.getPublicProfile(request:context:)
      )

    case "GetPrivateProfile":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetPrivateProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetPrivateProfileResponse>(),
        interceptors: self.interceptors?.makeGetPrivateProfileInterceptors() ?? [],
        userFunction: self.getPrivateProfile(request:context:)
      )

    case "DeleteMyProfile":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_DeleteMyProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_DeleteMyProfileResponse>(),
        interceptors: self.interceptors?.makeDeleteMyProfileInterceptors() ?? [],
        userFunction: self.deleteMyProfile(request:context:)
      )

    case "ReportUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ReportUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_ReportUserResponse>(),
        interceptors: self.interceptors?.makeReportUserInterceptors() ?? [],
        userFunction: self.reportUser(request:context:)
      )

    case "BlockUser":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_BlockUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_BlockUserResponse>(),
        interceptors: self.interceptors?.makeBlockUserInterceptors() ?? [],
        userFunction: self.blockUser(request:context:)
      )

    case "GetJwtFromClientSignedToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse>(),
        interceptors: self.interceptors?.makeGetJwtFromClientSignedTokenInterceptors() ?? [],
        userFunction: self.getJwtFromClientSignedToken(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Com_Octopuscommunity_UserServiceAsyncProvider: CallHandlerProvider, Sendable {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Com_Octopuscommunity_UserServiceServerInterceptorFactoryProtocol? { get }

  func deleteUser(
    request: Com_Octopuscommunity_DeleteUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_DeleteUserResponse

  ///For BO user only
  func banUser(
    request: Com_Octopuscommunity_BanUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_BanUserResponse

  ///For Admin user only
  func unbanUser(
    request: Com_Octopuscommunity_UnbanUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_UnbanUserResponse

  func createUser(
    request: Com_Octopuscommunity_CreateUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_CreateUserResponse

  func updateProfile(
    request: Com_Octopuscommunity_UpdateProfileRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_UpdateProfileResponse

  func getPublicProfile(
    request: Com_Octopuscommunity_GetPublicProfileRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_GetPublicProfileResponse

  func getPrivateProfile(
    request: Com_Octopuscommunity_GetPrivateProfileRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_GetPrivateProfileResponse

  func deleteMyProfile(
    request: Com_Octopuscommunity_DeleteMyProfileRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_DeleteMyProfileResponse

  func reportUser(
    request: Com_Octopuscommunity_ReportUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_ReportUserResponse

  func blockUser(
    request: Com_Octopuscommunity_BlockUserRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_BlockUserResponse

  func getJwtFromClientSignedToken(
    request: Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Com_Octopuscommunity_UserServiceAsyncProvider {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Com_Octopuscommunity_UserServiceServerMetadata.serviceDescriptor
  }

  public var serviceName: Substring {
    return Com_Octopuscommunity_UserServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  public var interceptors: Com_Octopuscommunity_UserServiceServerInterceptorFactoryProtocol? {
    return nil
  }

  public func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "DeleteUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_DeleteUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_DeleteUserResponse>(),
        interceptors: self.interceptors?.makeDeleteUserInterceptors() ?? [],
        wrapping: { try await self.deleteUser(request: $0, context: $1) }
      )

    case "BanUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_BanUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_BanUserResponse>(),
        interceptors: self.interceptors?.makeBanUserInterceptors() ?? [],
        wrapping: { try await self.banUser(request: $0, context: $1) }
      )

    case "UnbanUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_UnbanUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_UnbanUserResponse>(),
        interceptors: self.interceptors?.makeUnbanUserInterceptors() ?? [],
        wrapping: { try await self.unbanUser(request: $0, context: $1) }
      )

    case "createUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_CreateUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_CreateUserResponse>(),
        interceptors: self.interceptors?.makecreateUserInterceptors() ?? [],
        wrapping: { try await self.createUser(request: $0, context: $1) }
      )

    case "UpdateProfile":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_UpdateProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_UpdateProfileResponse>(),
        interceptors: self.interceptors?.makeUpdateProfileInterceptors() ?? [],
        wrapping: { try await self.updateProfile(request: $0, context: $1) }
      )

    case "GetPublicProfile":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetPublicProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetPublicProfileResponse>(),
        interceptors: self.interceptors?.makeGetPublicProfileInterceptors() ?? [],
        wrapping: { try await self.getPublicProfile(request: $0, context: $1) }
      )

    case "GetPrivateProfile":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetPrivateProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetPrivateProfileResponse>(),
        interceptors: self.interceptors?.makeGetPrivateProfileInterceptors() ?? [],
        wrapping: { try await self.getPrivateProfile(request: $0, context: $1) }
      )

    case "DeleteMyProfile":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_DeleteMyProfileRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_DeleteMyProfileResponse>(),
        interceptors: self.interceptors?.makeDeleteMyProfileInterceptors() ?? [],
        wrapping: { try await self.deleteMyProfile(request: $0, context: $1) }
      )

    case "ReportUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_ReportUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_ReportUserResponse>(),
        interceptors: self.interceptors?.makeReportUserInterceptors() ?? [],
        wrapping: { try await self.reportUser(request: $0, context: $1) }
      )

    case "BlockUser":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_BlockUserRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_BlockUserResponse>(),
        interceptors: self.interceptors?.makeBlockUserInterceptors() ?? [],
        wrapping: { try await self.blockUser(request: $0, context: $1) }
      )

    case "GetJwtFromClientSignedToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest>(),
        responseSerializer: ProtobufSerializer<Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse>(),
        interceptors: self.interceptors?.makeGetJwtFromClientSignedTokenInterceptors() ?? [],
        wrapping: { try await self.getJwtFromClientSignedToken(request: $0, context: $1) }
      )

    default:
      return nil
    }
  }
}

public protocol Com_Octopuscommunity_UserServiceServerInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when handling 'deleteUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteUserInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_DeleteUserRequest, Com_Octopuscommunity_DeleteUserResponse>]

  /// - Returns: Interceptors to use when handling 'banUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBanUserInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_BanUserRequest, Com_Octopuscommunity_BanUserResponse>]

  /// - Returns: Interceptors to use when handling 'unbanUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUnbanUserInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_UnbanUserRequest, Com_Octopuscommunity_UnbanUserResponse>]

  /// - Returns: Interceptors to use when handling 'createUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makecreateUserInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_CreateUserRequest, Com_Octopuscommunity_CreateUserResponse>]

  /// - Returns: Interceptors to use when handling 'updateProfile'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdateProfileInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_UpdateProfileRequest, Com_Octopuscommunity_UpdateProfileResponse>]

  /// - Returns: Interceptors to use when handling 'getPublicProfile'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetPublicProfileInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_GetPublicProfileRequest, Com_Octopuscommunity_GetPublicProfileResponse>]

  /// - Returns: Interceptors to use when handling 'getPrivateProfile'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetPrivateProfileInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_GetPrivateProfileRequest, Com_Octopuscommunity_GetPrivateProfileResponse>]

  /// - Returns: Interceptors to use when handling 'deleteMyProfile'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeDeleteMyProfileInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_DeleteMyProfileRequest, Com_Octopuscommunity_DeleteMyProfileResponse>]

  /// - Returns: Interceptors to use when handling 'reportUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeReportUserInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_ReportUserRequest, Com_Octopuscommunity_ReportUserResponse>]

  /// - Returns: Interceptors to use when handling 'blockUser'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeBlockUserInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_BlockUserRequest, Com_Octopuscommunity_BlockUserResponse>]

  /// - Returns: Interceptors to use when handling 'getJwtFromClientSignedToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetJwtFromClientSignedTokenInterceptors() -> [ServerInterceptor<Com_Octopuscommunity_GetJwtFromClientSignedTokenRequest, Com_Octopuscommunity_GetJwtFromClientSignedTokenResponse>]
}

public enum Com_Octopuscommunity_UserServiceServerMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "UserService",
    fullName: "com.octopuscommunity.UserService",
    methods: [
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.deleteUser,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.banUser,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.unbanUser,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.createUser,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.updateProfile,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.getPublicProfile,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.getPrivateProfile,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.deleteMyProfile,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.reportUser,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.blockUser,
      Com_Octopuscommunity_UserServiceServerMetadata.Methods.getJwtFromClientSignedToken,
    ]
  )

  public enum Methods {
    public static let deleteUser = GRPCMethodDescriptor(
      name: "DeleteUser",
      path: "/com.octopuscommunity.UserService/DeleteUser",
      type: GRPCCallType.unary
    )

    public static let banUser = GRPCMethodDescriptor(
      name: "BanUser",
      path: "/com.octopuscommunity.UserService/BanUser",
      type: GRPCCallType.unary
    )

    public static let unbanUser = GRPCMethodDescriptor(
      name: "UnbanUser",
      path: "/com.octopuscommunity.UserService/UnbanUser",
      type: GRPCCallType.unary
    )

    public static let createUser = GRPCMethodDescriptor(
      name: "createUser",
      path: "/com.octopuscommunity.UserService/createUser",
      type: GRPCCallType.unary
    )

    public static let updateProfile = GRPCMethodDescriptor(
      name: "UpdateProfile",
      path: "/com.octopuscommunity.UserService/UpdateProfile",
      type: GRPCCallType.unary
    )

    public static let getPublicProfile = GRPCMethodDescriptor(
      name: "GetPublicProfile",
      path: "/com.octopuscommunity.UserService/GetPublicProfile",
      type: GRPCCallType.unary
    )

    public static let getPrivateProfile = GRPCMethodDescriptor(
      name: "GetPrivateProfile",
      path: "/com.octopuscommunity.UserService/GetPrivateProfile",
      type: GRPCCallType.unary
    )

    public static let deleteMyProfile = GRPCMethodDescriptor(
      name: "DeleteMyProfile",
      path: "/com.octopuscommunity.UserService/DeleteMyProfile",
      type: GRPCCallType.unary
    )

    public static let reportUser = GRPCMethodDescriptor(
      name: "ReportUser",
      path: "/com.octopuscommunity.UserService/ReportUser",
      type: GRPCCallType.unary
    )

    public static let blockUser = GRPCMethodDescriptor(
      name: "BlockUser",
      path: "/com.octopuscommunity.UserService/BlockUser",
      type: GRPCCallType.unary
    )

    public static let getJwtFromClientSignedToken = GRPCMethodDescriptor(
      name: "GetJwtFromClientSignedToken",
      path: "/com.octopuscommunity.UserService/GetJwtFromClientSignedToken",
      type: GRPCCallType.unary
    )
  }
}
