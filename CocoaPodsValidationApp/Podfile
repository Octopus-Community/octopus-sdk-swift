platform :ios, '14.0'

target 'CocoaPodsValidationApp' do
  use_frameworks! :linkage => :static

#  pod 'OctopusCommunityUI'
#  pod 'OctopusCommunity'
#  pod 'OctopusCommunityCore'
#  pod 'OctopusCommunityRemoteClient'
#  pod 'OctopusCommunityGrpcModels'
#  pod 'OctopusCommunityDependencyInjection'

# Replace with that if you want to test with the local version
  pod 'OctopusCommunityUI', :path => '..'
  pod 'OctopusCommunity', :path => '..'
  pod 'OctopusCommunityCore', :path => '..'
  pod 'OctopusCommunityRemoteClient', :path => '..'
  pod 'OctopusCommunityGrpcModels', :path => '..'
  pod 'OctopusCommunityDependencyInjection', :path => '..'
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
#      # Force all pods to use iOS 14.0 minimum
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'

      # Write `ENABLE_USER_SCRIPT_SANDBOXING = NO` in the xcconfig file
      # If you prefer, you can remove that part and directly set NO to User script sandboxing in your target's build
      # settings

      # Skip non-app targets (optional)
      next unless target.name.include?("Pods-CocoaPodsValidationApp")
      # Path to the generated xcconfig file
      xcconfig_path = config.base_configuration_reference.real_path
      # Read and modify the xcconfig file
      xcconfig_contents = File.read(xcconfig_path)
      # Add or override the build setting
      unless xcconfig_contents.include?("ENABLE_USER_SCRIPT_SANDBOXING")
        xcconfig_contents += "\nENABLE_USER_SCRIPT_SANDBOXING = NO\n"
        File.open(xcconfig_path, "w") { |f| f.write(xcconfig_contents) }
        puts "âœ… Added ENABLE_USER_SCRIPT_SANDBOXING = NO to #{xcconfig_path}"
      end
    end
  end
end
