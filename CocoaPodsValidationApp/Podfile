platform :ios, '14.0'

target 'CocoaPodsValidationApp' do
  use_frameworks!

  git_url = 'git@github.com:Octopus-Community/octopus-sdk-swift.git'
  branch = 'main'

  # Reference your SDK from the parent directory
  # You can replace :branch with :tag if you prefer to target a tag, or :path if you want to use a local version
  pod 'OctopusUI', :git => git_url, :branch => branch
  pod 'Octopus', :git => git_url, :branch => branch
  pod 'OctopusCore', :git => git_url, :branch => branch
  pod 'OctopusRemoteClient', :git => git_url, :branch => branch
  pod 'OctopusGrpcModels', :git => git_url, :branch => branch
  pod 'OctopusDependencyInjection', :git => git_url, :branch => branch

#  pod 'OctopusUI', :path => '..'
#  pod 'Octopus', :path => '..'
#  pod 'OctopusCore', :path => '..'
#  pod 'OctopusRemoteClient', :path => '..'
#  pod 'OctopusGrpcModels', :path => '..'
#  pod 'OctopusDependencyInjection', :path => '..'
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      # Force all pods to use iOS 14.0 minimum
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
      config.build_settings['MACOSX_DEPLOYMENT_TARGET'] = '10.15'
      config.build_settings['TVOS_DEPLOYMENT_TARGET'] = '14.0'
      config.build_settings['WATCHOS_DEPLOYMENT_TARGET'] = '7.0'
      
      # Additional settings to avoid libarclite issues
      config.build_settings['CLANG_ENABLE_OBJC_WEAK'] = 'YES'
      config.build_settings['CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS'] = 'YES'


      # Write `ENABLE_USER_SCRIPT_SANDBOXING = NO` in the xcconfig file
      # If you prefer, you can remove that part and directly set NO to User script sandboxing in your target's build
      # settings

      # Skip non-app targets (optional)
      next unless target.name.include?("Pods-CocoaPodsValidationApp")
      # Path to the generated xcconfig file
      xcconfig_path = config.base_configuration_reference.real_path
      # Read and modify the xcconfig file
      xcconfig_contents = File.read(xcconfig_path)
      # Add or override the build setting
      unless xcconfig_contents.include?("ENABLE_USER_SCRIPT_SANDBOXING")
        xcconfig_contents += "\nENABLE_USER_SCRIPT_SANDBOXING = NO\n"
        File.open(xcconfig_path, "w") { |f| f.write(xcconfig_contents) }
        puts "âœ… Added ENABLE_USER_SCRIPT_SANDBOXING = NO to #{xcconfig_path}"
      end
    end
  end
end
